{"ast":null,"code":"import _toConsumableArray from\"/Users/liuhongyang/Documents/GitHub/repositories/mindmap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import*as refer from'../statics/refer';import{findNode}from'./assistFunctions';import{drawDragCanvas}from'./drawCanvas';var getDomOffset=function getDomOffset(dom){var left=dom.offsetLeft,right=left+dom.offsetWidth,top=dom.offsetTop,bottom=top+dom.offsetHeight;return{left:left,right:right,top:top,bottom:bottom};};export default(function(mindmap,drag_canvas,container,theme,mindmapHook,zoom,drag){var moveNode=mindmapHook.moveNode;var node_id,parent_id,target_id,is_sibling,children,children_offset_left,children_offset_right,children_offset_vertical,parent_offset,parent_is_root,container_left,container_top,container_width,container_height,in_drop_area;var resetVariables=function resetVariables(){node_id='';parent_id='';target_id='';is_sibling=false;children=[];children_offset_left=[];children_offset_right=[];children_offset_vertical=[];parent_offset=undefined;parent_is_root=false;container_left=container.scrollLeft;container_top=container.scrollTop-56;container_width=container.offsetWidth;container_height=container.offsetHeight;in_drop_area=false;};var handleContainerScroll=function handleContainerScroll(e){container_left=container.scrollLeft;container_top=container.scrollTop-56;// 56 是 container（Main 组件）顶部 margin 值        \n};return[{type:'dragstart',listener:function listener(event){resetVariables();container.addEventListener('scroll',handleContainerScroll);if(event.target&&(event.target.dataset.tag===refer.LEFT_NODE||event.target.dataset.tag===refer.RIGHT_NODE)){node_id=event.target.id;parent_id=event.target.dataset.parent;var parent=findNode(mindmap,parent_id);parent_is_root=parent===mindmap;parent_offset=getDomOffset(document.getElementById(parent_id));children[0]=parent.children.map(function(child){return child.id;});var children_offset=[];children_offset[0]=children[0].map(function(node_id){return getDomOffset(document.getElementById(node_id));});if(parent_is_root&&mindmap.children.length>3){var half=Math.trunc(mindmap.children.length/2);children=[children[0].slice(0,half),children[0].slice(half)];children_offset=[children_offset[0].slice(0,half),children_offset[0].slice(half)];}children_offset_left=children_offset.map(function(each){return Math.min.apply(Math,_toConsumableArray(each.map(function(offset){return offset.left;})));});children_offset_right=children_offset.map(function(each){return Math.max.apply(Math,_toConsumableArray(each.map(function(offset){return offset.right;})));});children_offset_vertical=children_offset.map(function(each){return each.map(function(offset){return[offset.top,offset.bottom];}).reduce(function(flat_arr,cur){return flat_arr.concat(cur);},[]);});}}},{type:'drag',listener:function listener(event){var ctx=drag_canvas.getContext('2d');ctx.clearRect(0,0,drag_canvas.width,drag_canvas.height);var total=children.length;var moveX=-(container_width*drag.x/100);var moveY=-(container_height*drag.y/100);var mouse_x=(event.x+container_left)/zoom+moveX,mouse_y=(event.y+container_top)/zoom+moveY;for(var i=0;i<total;i++){if(!in_drop_area&&mouse_x>children_offset_left[i]&&mouse_x<children_offset_right[i]){var child_offset={left:children_offset_left[i],right:children_offset_right[i]};var child_left_of_parent=i===1||!parent_is_root&&document.getElementById(node_id).dataset.tag===refer.LEFT_NODE;// i = 1，即出现双侧拖拽时，左侧发生的拖拽 child_left_of_parent 必然为 true\nvar last_index=children_offset_vertical[i].length-1;if(mouse_y>children_offset_vertical[i][0]-200&&mouse_y<children_offset_vertical[i][0]){// 优化体验，实际是显示的 2 倍\nchild_offset.top=children_offset_vertical[i][0]-50;child_offset.bottom=children_offset_vertical[i][0];drawDragCanvas(ctx,theme,node_id,parent_offset,child_offset,child_left_of_parent);target_id=children[i][0];is_sibling=true;return;}for(var j=2;j<last_index+1;j+=2){if(mouse_y>children_offset_vertical[i][j-1]&&mouse_y<children_offset_vertical[i][j]){child_offset.top=children_offset_vertical[i][j-1];child_offset.bottom=children_offset_vertical[i][j];drawDragCanvas(ctx,theme,node_id,parent_offset,child_offset,child_left_of_parent);target_id=children[i][j/2];is_sibling=true;return;}}if(mouse_y>children_offset_vertical[i][last_index]&&mouse_y<children_offset_vertical[i][last_index]+200){child_offset.top=children_offset_vertical[i][last_index];child_offset.bottom=children_offset_vertical[i][last_index]+50;drawDragCanvas(ctx,theme,node_id,parent_offset,child_offset,child_left_of_parent);target_id=children[i+1]&&children[i+1][0];is_sibling=true;return;}}}}},{type:'dragover',listener:function listener(event){event.preventDefault();}},{type:'dragenter',listener:function listener(event){if(event.target&&event.target.dataset.tag===refer.DROP_AREA){event.target.parentNode.classList.add('ondrag');target_id=event.target.parentNode.id;is_sibling=false;in_drop_area=true;}}},{type:'dragleave',listener:function listener(event){if(event.target&&event.target.dataset.tag===refer.DROP_AREA){event.target.parentNode.classList.remove('ondrag');target_id='';is_sibling=false;in_drop_area=false;}}},{type:'drop',listener:function listener(event){event.target.parentNode.classList.remove('ondrag');if(target_id!==''&&target_id!==node_id&&target_id!==parent_id){moveNode(node_id,target_id,parent_id,is_sibling);}}},{type:'dragend',listener:function listener(){var ctx=drag_canvas.getContext('2d');ctx.clearRect(0,0,drag_canvas.width,drag_canvas.height);container.removeEventListener('scroll',handleContainerScroll);}}];});","map":{"version":3,"sources":["/Users/liuhongyang/Documents/GitHub/repositories/mindmap/src/methods/getDragEvents.js"],"names":["refer","findNode","drawDragCanvas","getDomOffset","dom","left","offsetLeft","right","offsetWidth","top","offsetTop","bottom","offsetHeight","mindmap","drag_canvas","container","theme","mindmapHook","zoom","drag","moveNode","node_id","parent_id","target_id","is_sibling","children","children_offset_left","children_offset_right","children_offset_vertical","parent_offset","parent_is_root","container_left","container_top","container_width","container_height","in_drop_area","resetVariables","undefined","scrollLeft","scrollTop","handleContainerScroll","e","type","listener","event","addEventListener","target","dataset","tag","LEFT_NODE","RIGHT_NODE","id","parent","document","getElementById","map","child","children_offset","length","half","Math","trunc","slice","each","min","offset","max","reduce","flat_arr","cur","concat","ctx","getContext","clearRect","width","height","total","moveX","x","moveY","y","mouse_x","mouse_y","i","child_offset","child_left_of_parent","last_index","j","preventDefault","DROP_AREA","parentNode","classList","add","remove","removeEventListener"],"mappings":"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","sourcesContent":["import * as refer from '../statics/refer';\nimport { findNode } from './assistFunctions';\nimport { drawDragCanvas } from './drawCanvas';\n\nconst getDomOffset = dom => {\n    const left = dom.offsetLeft,\n        right = left + dom.offsetWidth,\n        top = dom.offsetTop,\n        bottom = top + dom.offsetHeight;\n    return { left, right, top, bottom };\n};\n\nexport default (mindmap, drag_canvas, container, theme, mindmapHook,zoom,drag) => {\n    const { moveNode } = mindmapHook;\n\n    let node_id, parent_id, target_id, is_sibling,\n        children, children_offset_left, children_offset_right, children_offset_vertical,\n        parent_offset, parent_is_root,\n        container_left, container_top,container_width,container_height,\n        in_drop_area;\n\n    const resetVariables = () => {\n        node_id = '';\n        parent_id = '';\n        target_id = '';\n        is_sibling = false;\n\n        children = [];\n        children_offset_left = [];\n        children_offset_right = [];\n        children_offset_vertical = [];\n\n        parent_offset = undefined;\n        parent_is_root = false;\n\n        container_left = container.scrollLeft;\n        container_top = container.scrollTop - 56;\n        container_width = container.offsetWidth;\n        container_height = container.offsetHeight;\n\n        in_drop_area = false;\n    };\n\n    const handleContainerScroll = (e) => {\n        \n        container_left = container.scrollLeft;\n        container_top = container.scrollTop - 56; // 56 是 container（Main 组件）顶部 margin 值        \n    };\n\n    return [\n        \n        {\n            type: 'dragstart',\n            listener: event => {\n                resetVariables();\n                container.addEventListener('scroll', handleContainerScroll);\n                if (event.target && (event.target.dataset.tag === refer.LEFT_NODE || event.target.dataset.tag === refer.RIGHT_NODE)) {\n                    node_id = event.target.id;\n                    parent_id = event.target.dataset.parent;\n                    const parent = findNode(mindmap, parent_id);\n                    parent_is_root = parent === mindmap;\n                    parent_offset = getDomOffset(document.getElementById(parent_id));\n                    children[0] = parent.children.map(child => child.id);\n                    let children_offset = [];\n                    children_offset[0] = children[0].map(node_id => getDomOffset(document.getElementById(node_id)));\n                    if (parent_is_root && mindmap.children.length > 3) {\n                        const half = Math.trunc(mindmap.children.length / 2);\n                        children = [children[0].slice(0, half), children[0].slice(half)];\n                        children_offset = [children_offset[0].slice(0, half), children_offset[0].slice(half)];\n                    }\n                    children_offset_left = children_offset.map(each => Math.min(...each.map(offset => offset.left)));\n                    children_offset_right = children_offset.map(each => Math.max(...each.map(offset => offset.right)));\n                    children_offset_vertical = children_offset.map(each => each.map(offset => [offset.top, offset.bottom]).reduce((flat_arr, cur) => flat_arr.concat(cur), []));\n                }\n            }\n        },\n        {\n            type: 'drag',\n            listener: event => {\n                const ctx = drag_canvas.getContext('2d');\n                ctx.clearRect(0, 0, drag_canvas.width, drag_canvas.height);\n                const total = children.length;\n                const moveX=-(container_width*drag.x/100)\n                const moveY=-(container_height*drag.y/100)\n                const mouse_x = (event.x + container_left)/zoom+moveX,\n                    mouse_y = (event.y + container_top)/zoom+moveY;\n                for (let i = 0; i < total; i++) {\n                    if (!in_drop_area && mouse_x > children_offset_left[i] && mouse_x < children_offset_right[i]) {\n                        let child_offset = { left: children_offset_left[i], right: children_offset_right[i] };\n                        const child_left_of_parent = i === 1 || (!parent_is_root && (document.getElementById(node_id).dataset.tag === refer.LEFT_NODE)); // i = 1，即出现双侧拖拽时，左侧发生的拖拽 child_left_of_parent 必然为 true\n                        const last_index = children_offset_vertical[i].length - 1;\n                        if (mouse_y > children_offset_vertical[i][0] - 200 && mouse_y < children_offset_vertical[i][0]) { // 优化体验，实际是显示的 2 倍\n                            child_offset.top = children_offset_vertical[i][0] - 50;\n                            child_offset.bottom = children_offset_vertical[i][0];\n                            drawDragCanvas(ctx, theme, node_id, parent_offset, child_offset, child_left_of_parent);\n                            target_id = children[i][0];\n                            is_sibling = true;\n                            return;\n                        }\n                        for (let j = 2; j < last_index + 1; j += 2) {\n                            if (mouse_y > children_offset_vertical[i][j - 1] && mouse_y < children_offset_vertical[i][j]) {\n                                child_offset.top = children_offset_vertical[i][j - 1];\n                                child_offset.bottom = children_offset_vertical[i][j];\n                                drawDragCanvas(ctx, theme, node_id, parent_offset, child_offset, child_left_of_parent);\n                                target_id = children[i][j / 2];\n                                is_sibling = true;\n                                return;\n                            }\n                        }\n                        if (mouse_y > children_offset_vertical[i][last_index] && mouse_y < children_offset_vertical[i][last_index] + 200) {\n                            child_offset.top = children_offset_vertical[i][last_index];\n                            child_offset.bottom = children_offset_vertical[i][last_index] + 50;\n                            drawDragCanvas(ctx, theme, node_id, parent_offset, child_offset, child_left_of_parent);\n                            target_id = children[i + 1] && children[i + 1][0];\n                            is_sibling = true;\n                            return;\n                        }\n                    }\n                }\n            }\n        },\n        {\n            type: 'dragover',\n            listener: event => {\n                event.preventDefault();\n            }\n        },\n        {\n            type: 'dragenter',\n            listener: event => {\n                if (event.target && event.target.dataset.tag === refer.DROP_AREA) {\n                    event.target.parentNode.classList.add('ondrag');\n                    target_id = event.target.parentNode.id;\n                    is_sibling = false;\n                    in_drop_area = true;\n                }\n            }\n        },\n        {\n            type: 'dragleave',\n            listener: event => {\n                if (event.target && event.target.dataset.tag === refer.DROP_AREA) {\n                    event.target.parentNode.classList.remove('ondrag');\n                    target_id = '';\n                    is_sibling = false;\n                    in_drop_area = false;\n                }\n            }\n        },\n        {\n            type: 'drop',\n            listener: event => {\n                event.target.parentNode.classList.remove('ondrag');\n                if (target_id !== '' && target_id !== node_id && target_id !== parent_id) {\n                    moveNode(node_id, target_id, parent_id, is_sibling);\n                }\n            }\n        },\n        {\n            type: 'dragend',\n            listener: () => {\n                const ctx = drag_canvas.getContext('2d');\n                ctx.clearRect(0, 0, drag_canvas.width, drag_canvas.height);\n                container.removeEventListener('scroll', handleContainerScroll);\n            }\n        }\n    ];\n}"]},"metadata":{},"sourceType":"module"}