{"ast":null,"code":"import{useContext}from'react';import{context}from'../context';import{setMindmap}from'../context/reducer/mindmap/actionCreator.js';import{setSelect}from'../context/reducer/nodeStatus/actionCreator.js';export default(function(){var _useContext=useContext(context),mDispatch=_useContext.mindmap.dispatch,nDispatch=_useContext.nodeStatus.dispatch,history=_useContext.history.state;var applySnapshot=function applySnapshot(snapshot){if(snapshot){var mindmap=snapshot.mindmap,cur_node=snapshot.cur_node;mDispatch(setMindmap(JSON.parse(mindmap)));nDispatch(setSelect(cur_node));}};return{undoHistory:function undoHistory(){applySnapshot(history.undo[history.undo.length-1]);},redoHistory:function redoHistory(){applySnapshot(history.redo[0]);}};});","map":{"version":3,"sources":["/Users/liuhongyang/Documents/GitHub/repositories/mindmap/src/customHooks/useHistory.js"],"names":["useContext","context","setMindmap","setSelect","mDispatch","mindmap","dispatch","nDispatch","nodeStatus","history","state","applySnapshot","snapshot","cur_node","JSON","parse","undoHistory","undo","length","redoHistory","redo"],"mappings":"AAAA,OAAQA,UAAR,KAAyB,OAAzB,CACA,OAAQC,OAAR,KAAsB,YAAtB,CACA,OAAQC,UAAR,KAAyB,6CAAzB,CACA,OAAQC,SAAR,KAAwB,gDAAxB,CAEA,eAAe,UAAM,iBACsFH,UAAU,CAACC,OAAD,CADhG,CACUG,SADV,aACVC,OADU,CACAC,QADA,CAC6CC,SAD7C,aACsBC,UADtB,CACmCF,QADnC,CAC0EG,OAD1E,aACyDA,OADzD,CACmEC,KADnE,CAGjB,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,QAAQ,CAAI,CAC9B,GAAIA,QAAJ,CAAc,IACHP,CAAAA,OADG,CACkBO,QADlB,CACHP,OADG,CACMQ,QADN,CACkBD,QADlB,CACMC,QADN,CAEVT,SAAS,CAACF,UAAU,CAACY,IAAI,CAACC,KAAL,CAAWV,OAAX,CAAD,CAAX,CAAT,CACAE,SAAS,CAACJ,SAAS,CAACU,QAAD,CAAV,CAAT,CACH,CACJ,CAND,CAQA,MAAO,CACHG,WAAW,CAAE,sBAAM,CACfL,aAAa,CAACF,OAAO,CAACQ,IAAR,CAAaR,OAAO,CAACQ,IAAR,CAAaC,MAAb,CAAsB,CAAnC,CAAD,CAAb,CACH,CAHE,CAIHC,WAAW,CAAE,sBAAM,CACfR,aAAa,CAACF,OAAO,CAACW,IAAR,CAAa,CAAb,CAAD,CAAb,CACH,CANE,CAAP,CAQH,CAnBD","sourcesContent":["import {useContext} from 'react';\nimport {context} from '../context';\nimport {setMindmap} from '../context/reducer/mindmap/actionCreator.js';\nimport {setSelect} from '../context/reducer/nodeStatus/actionCreator.js';\n\nexport default () => {\n    const {mindmap: {dispatch: mDispatch}, nodeStatus: {dispatch: nDispatch}, history: {state: history}} = useContext(context);\n\n    const applySnapshot = snapshot => {\n        if (snapshot) {\n            const {mindmap, cur_node} = snapshot;\n            mDispatch(setMindmap(JSON.parse(mindmap)));\n            nDispatch(setSelect(cur_node));\n        }\n    };\n\n    return {\n        undoHistory: () => {\n            applySnapshot(history.undo[history.undo.length - 1]);\n        },\n        redoHistory: () => {\n            applySnapshot(history.redo[0]);\n        }\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}