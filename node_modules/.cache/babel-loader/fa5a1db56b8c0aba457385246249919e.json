{"ast":null,"code":"var _jsxFileName = \"/Users/liuhongyang/Documents/GitHub/repositories/mindmap/src/features/Mindmap/index.js\";\nimport React, { useEffect, useContext, useRef, useMemo, useState } from 'react';\nimport { css } from 'emotion';\nimport * as refer from '../../statics/refer';\nimport { context } from '../../context/';\nimport { setHistory } from '../../context/reducer/history/actionCreator';\nimport useMindmap from '../../customHooks/useMindmap';\nimport useHistory from '../../customHooks/useHistory';\nimport getKeydownEvent from '../../methods/getKeydownEvent';\nimport getMouseWheelEvent from '../../methods/getMouseWheelEvent';\nimport RootNode from '../../components/RootNode';\nimport DragCanvas from '../../components/DragCanvas';\nimport LineCanvas from '../../components/LineCanvas';\nimport useZoom from '../../customHooks/useZoom';\nimport useMove from '../../customHooks/useMove';\nimport { debounce } from '../../methods/assistFunctions';\nconst node_refs = new Set();\n\nconst Mindmap = ({\n  container_ref\n}) => {\n  const self = useRef();\n  const {\n    mindmap: {\n      state: root_node\n    },\n    nodeStatus: {\n      state: nodeStatus\n    },\n    history: {\n      dispatch: hDispatch\n    },\n    global: {\n      state: gState\n    }\n  } = useContext(context);\n  const historyHook = useHistory();\n  const mindmapHook = useMindmap();\n  const zoomHook = useZoom();\n  const moveHook = useMove();\n  const {\n    clearNodeStatus\n  } = mindmapHook;\n  const [FLAG, setFLAG] = useState(0);\n  const mindmap_json = useMemo(() => JSON.stringify(root_node), [root_node]); // 如果 root_node 没有 JSON.stringify，使用按键操作时有时会连续两次触发 useEffect，目前没查出来为什么。利用 useMemo 避免重复触发\n\n  const handleResize = () => {\n    setFLAG(Date.now());\n  };\n\n  useEffect(() => {\n    const handleKeydown = getKeydownEvent(nodeStatus, mindmapHook, historyHook);\n    window.addEventListener('keydown', handleKeydown);\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, [nodeStatus]);\n  useEffect(() => {\n    window.addEventListener('click', clearNodeStatus);\n    return () => {\n      window.removeEventListener('click', clearNodeStatus);\n    };\n  }, []);\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  useEffect(() => {\n    const normalizeXY = container_ref.current.clientWidth / container_ref.current.clientHeight;\n    const handleMouseWheel = getMouseWheelEvent(zoomHook, gState.zoom);\n    const handleMapMove = getMouseWheelEvent(moveHook, gState.zoom, normalizeXY);\n    document.querySelector(`#${refer.MINDMAP_MAIN}`).addEventListener('wheel', handleMouseWheel);\n    document.querySelector(`#${refer.MINDMAP_MAIN}`).addEventListener('mousemove', debounce(handleMapMove, 4));\n    document.querySelector(`#${refer.MINDMAP_MAIN}`).addEventListener('mousedown', handleMapMove);\n    return () => {\n      document.querySelector(`#${refer.MINDMAP_MAIN}`).removeEventListener('wheel', handleMouseWheel);\n      document.querySelector(`#${refer.MINDMAP_MAIN}`).addEventListener('mousemove', debounce(handleMapMove, 4));\n      document.querySelector(`#${refer.MINDMAP_MAIN}`).addEventListener('mousedown', handleMapMove);\n    };\n  }, [FLAG]);\n  useEffect(() => {\n    localStorage.setItem('mindmap', mindmap_json);\n    hDispatch(setHistory(mindmap_json, nodeStatus.cur_select || nodeStatus.cur_edit));\n  }, [mindmap_json]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapper,\n    ref: self,\n    style: {\n      zoom: gState.zoom,\n      left: gState.x + 'vw',\n      top: gState.y + 'vh'\n    },\n    id: refer.MINDMAP_ID,\n    draggable: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RootNode, {\n    key: root_node.id,\n    layer: 0,\n    node: root_node,\n    node_refs: node_refs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(DragCanvas, {\n    parent_ref: self,\n    container_ref: container_ref,\n    mindmap: root_node,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(LineCanvas, {\n    parent_ref: self,\n    mindmap: root_node,\n    node_refs: node_refs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Mindmap; // CSS\n\nconst wrapper = css`\nposition: relative;\nwidth: fit-content;\npadding: 30vh 30vw;\n`;","map":{"version":3,"sources":["/Users/liuhongyang/Documents/GitHub/repositories/mindmap/src/features/Mindmap/index.js"],"names":["React","useEffect","useContext","useRef","useMemo","useState","css","refer","context","setHistory","useMindmap","useHistory","getKeydownEvent","getMouseWheelEvent","RootNode","DragCanvas","LineCanvas","useZoom","useMove","debounce","node_refs","Set","Mindmap","container_ref","self","mindmap","state","root_node","nodeStatus","history","dispatch","hDispatch","global","gState","historyHook","mindmapHook","zoomHook","moveHook","clearNodeStatus","FLAG","setFLAG","mindmap_json","JSON","stringify","handleResize","Date","now","handleKeydown","window","addEventListener","removeEventListener","normalizeXY","current","clientWidth","clientHeight","handleMouseWheel","zoom","handleMapMove","document","querySelector","MINDMAP_MAIN","localStorage","setItem","cur_select","cur_edit","wrapper","left","x","top","y","MINDMAP_ID","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useRef, useMemo, useState } from 'react';\nimport { css } from 'emotion';\nimport * as refer from '../../statics/refer';\nimport { context } from '../../context/';\nimport { setHistory } from '../../context/reducer/history/actionCreator';\nimport useMindmap from '../../customHooks/useMindmap';\nimport useHistory from '../../customHooks/useHistory';\nimport getKeydownEvent from '../../methods/getKeydownEvent';\nimport getMouseWheelEvent from '../../methods/getMouseWheelEvent';\nimport RootNode from '../../components/RootNode';\nimport DragCanvas from '../../components/DragCanvas';\nimport LineCanvas from '../../components/LineCanvas';\nimport useZoom from '../../customHooks/useZoom';\nimport useMove from '../../customHooks/useMove';\nimport { debounce } from '../../methods/assistFunctions';\n\nconst node_refs = new Set();\n\nconst Mindmap = ({ container_ref }) => {\n    const self = useRef();\n    const { mindmap: { state: root_node }, nodeStatus: { state: nodeStatus }, history: { dispatch: hDispatch }, global: { state: gState } } = useContext(context);\n\n    const historyHook = useHistory();\n    const mindmapHook = useMindmap();\n    const zoomHook = useZoom();\n    const moveHook = useMove()\n    const { clearNodeStatus } = mindmapHook;\n    const [FLAG, setFLAG] = useState(0)\n\n    const mindmap_json = useMemo(() => JSON.stringify(root_node), [root_node]); // 如果 root_node 没有 JSON.stringify，使用按键操作时有时会连续两次触发 useEffect，目前没查出来为什么。利用 useMemo 避免重复触发\n\n    const handleResize = () => {\n        setFLAG(Date.now())\n    }\n\n    useEffect(() => {\n        const handleKeydown = getKeydownEvent(nodeStatus, mindmapHook, historyHook);\n        window.addEventListener('keydown', handleKeydown);\n        return () => {\n            window.removeEventListener('keydown', handleKeydown);\n        }\n    }, [nodeStatus]);\n\n    useEffect(() => {\n        window.addEventListener('click', clearNodeStatus);\n        return () => {\n            window.removeEventListener('click', clearNodeStatus);\n        }\n    }, []);\n\n    useEffect(() => {\n        window.addEventListener('resize', handleResize);\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        }\n    }, [])\n\n    useEffect(() => {\n        const normalizeXY = container_ref.current.clientWidth / container_ref.current.clientHeight\n        const handleMouseWheel = getMouseWheelEvent(zoomHook, gState.zoom)\n        const handleMapMove = getMouseWheelEvent(moveHook, gState.zoom, normalizeXY)\n        document.querySelector(`#${refer.MINDMAP_MAIN}`).addEventListener('wheel', handleMouseWheel);\n        document.querySelector(`#${refer.MINDMAP_MAIN}`).addEventListener('mousemove', debounce(handleMapMove, 4));\n        document.querySelector(`#${refer.MINDMAP_MAIN}`).addEventListener('mousedown', handleMapMove)\n        return () => {\n            document.querySelector(`#${refer.MINDMAP_MAIN}`).removeEventListener('wheel', handleMouseWheel);\n            document.querySelector(`#${refer.MINDMAP_MAIN}`).addEventListener('mousemove', debounce(handleMapMove, 4));\n            document.querySelector(`#${refer.MINDMAP_MAIN}`).addEventListener('mousedown', handleMapMove);\n        }\n    }, [FLAG]);\n\n    useEffect(() => {\n        localStorage.setItem('mindmap', mindmap_json);\n        hDispatch(setHistory(mindmap_json, nodeStatus.cur_select || nodeStatus.cur_edit));\n    }, [mindmap_json]);\n\n    return (\n        <div\n            className={wrapper}\n            ref={self}\n            style={{ zoom: gState.zoom, left: gState.x + 'vw', top: gState.y + 'vh' }}\n            id={refer.MINDMAP_ID}\n            draggable={false}>\n            <RootNode key={root_node.id} layer={0} node={root_node} node_refs={node_refs} />\n            <DragCanvas parent_ref={self} container_ref={container_ref} mindmap={root_node} />\n            <LineCanvas parent_ref={self} mindmap={root_node} node_refs={node_refs} />\n        </div>\n    );\n};\n\nexport default Mindmap;\n\n// CSS\nconst wrapper = css`\nposition: relative;\nwidth: fit-content;\npadding: 30vh 30vw;\n`;"]},"metadata":{},"sourceType":"module"}