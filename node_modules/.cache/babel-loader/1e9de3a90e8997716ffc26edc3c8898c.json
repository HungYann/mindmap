{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/liuhongyang/Desktop/RMind-develop/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/liuhongyang/Desktop/RMind-develop/src/components/Popup/subComponents/Open.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\nmargin: 0;\\npadding: 0;\\nfont-size: 90%;\\nlist-style: circle inside;\\n\\nli {\\nline-height: 2em;\\n}\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\nmargin: 20px 0 5px;\\npadding-bottom: 8px;\\nborder-bottom: 1px solid #dddddd;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from 'react';\nimport { css } from 'emotion';\nimport { context } from '../../../context';\nimport { setTitle } from '../../../context/reducer/global/actionCreator';\nimport useMindmap from '../../../customHooks/useMindmap';\nimport { ROOT_NODE_ID } from '../../../statics/refer';\nimport mindmapParser from '../../../methods/mindmapParser';\nimport { ButtonSet, MainButton, Shortcut, Highlight, Annotation } from '../common/styledComponents';\n\nconst Open = ({\n  handleClosePopup,\n  handleDownload\n}) => {\n  const _useContext = useContext(context),\n        dispatch = _useContext.global.dispatch;\n\n  const _useMindmap = useMindmap(),\n        setMindmap = _useMindmap.setMindmap;\n\n  const handleOpenFile = () => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = '.rmf,.km,.txt,.md';\n    input.addEventListener('change', event => {\n      const file = event.target.files[0],\n            file_name = file.name;\n      let dot_index = file_name.length - 1;\n\n      while (dot_index > 0 && file_name[dot_index] !== '.') {\n        dot_index--;\n      }\n\n      const format = file_name.slice(dot_index + 1).toUpperCase(),\n            title = file_name.slice(0, dot_index);\n      const file_reader = new FileReader();\n\n      file_reader.onload = event => {\n        const str = event.target.result;\n        const mindmap = mindmapParser(str, format);\n\n        if (mindmap && mindmap.id === ROOT_NODE_ID) {\n          setMindmap(mindmap, true);\n          dispatch(setTitle(title));\n          handleClosePopup();\n        } else {\n          alert('不是有效的思维导图文件');\n        }\n      };\n\n      file_reader.readAsText(file);\n    });\n    input.click();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Highlight, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"\\u6253\\u5F00\\u5176\\u4ED6\\u6587\\u4EF6\\u540E\\uFF0C\\u5F53\\u524D\\u601D\\u7EF4\\u5BFC\\u56FE\\u7684\\u6570\\u636E\\u5C06\\u4E22\\u5931\\u3002\"), React.createElement(Annotation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"\\u8981\\u4FDD\\u5B58\\u5F53\\u524D\\u6570\\u636E\\uFF0C\\u8BF7\\u5C06\\u601D\\u7EF4\\u5BFC\\u56FE\", React.createElement(Shortcut, {\n    onClick: handleDownload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"\\u4E0B\\u8F7D\\u81F3\\u672C\\u5730\"), \"\\u3002\"), React.createElement(\"p\", {\n    className: sub_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"\\u652F\\u6301\\u6253\\u5F00\\u683C\\u5F0F\\uFF1A\"), React.createElement(\"ul\", {\n    className: list_wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"RMind\\uFF08.rmf\\uFF09\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"\\u767E\\u5EA6\\u8111\\u56FE\\uFF08.km\\uFF09\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Markdown\\uFF08.md\\uFF09\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"\\u6587\\u672C\\u6587\\u4EF6\\uFF08.txt\\uFF09\")), React.createElement(ButtonSet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(MainButton, {\n    onClick: handleOpenFile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"\\u6253\\u5F00\\u6587\\u4EF6\"), React.createElement(\"button\", {\n    onClick: handleClosePopup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"\\u53D6\\u6D88\")));\n};\n\nexport default Open; // CSS\n\nconst sub_title = css(_templateObject());\nconst list_wrapper = css(_templateObject2());","map":{"version":3,"sources":["/Users/liuhongyang/Desktop/RMind-develop/src/components/Popup/subComponents/Open.js"],"names":["React","useContext","css","context","setTitle","useMindmap","ROOT_NODE_ID","mindmapParser","ButtonSet","MainButton","Shortcut","Highlight","Annotation","Open","handleClosePopup","handleDownload","dispatch","global","setMindmap","handleOpenFile","input","document","createElement","type","accept","addEventListener","event","file","target","files","file_name","name","dot_index","length","format","slice","toUpperCase","title","file_reader","FileReader","onload","str","result","mindmap","id","alert","readAsText","click","sub_title","list_wrapper"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react';\nimport {css} from 'emotion';\nimport {context} from '../../../context';\nimport {setTitle} from '../../../context/reducer/global/actionCreator';\nimport useMindmap from '../../../customHooks/useMindmap';\nimport {ROOT_NODE_ID} from '../../../statics/refer';\nimport mindmapParser from '../../../methods/mindmapParser';\nimport {ButtonSet, MainButton, Shortcut, Highlight, Annotation} from '../common/styledComponents';\n\nconst Open = ({handleClosePopup, handleDownload}) => {\n    const {global: {dispatch}} = useContext(context);\n    const {setMindmap} = useMindmap();\n\n    const handleOpenFile = () => {\n        const input = document.createElement('input');\n        input.type = 'file';\n        input.accept = '.rmf,.km,.txt,.md';\n        input.addEventListener('change', event => {\n            const file = event.target.files[0],\n                file_name = file.name;\n            let dot_index = file_name.length - 1;\n            while (dot_index > 0 && file_name[dot_index] !== '.') {\n                dot_index--;\n            }\n            const format = file_name.slice(dot_index + 1).toUpperCase(),\n                title = file_name.slice(0, dot_index);\n            const file_reader = new FileReader();\n            file_reader.onload = event => {\n                const str = event.target.result;\n                const mindmap = mindmapParser(str, format);\n                if (mindmap && mindmap.id === ROOT_NODE_ID) {\n                    setMindmap(mindmap, true);\n                    dispatch(setTitle(title));\n                    handleClosePopup();\n                } else {\n                    alert('不是有效的思维导图文件');\n                }\n            };\n            file_reader.readAsText(file);\n        });\n        input.click();\n    };\n\n    return (<div>\n        <Highlight>打开其他文件后，当前思维导图的数据将丢失。</Highlight>\n        <Annotation>要保存当前数据，请将思维导图<Shortcut onClick={handleDownload}>下载至本地</Shortcut>。</Annotation>\n        <p className={sub_title}>支持打开格式：</p>\n        <ul className={list_wrapper}>\n            <li>RMind（.rmf）</li>\n            <li>百度脑图（.km）</li>\n            <li>Markdown（.md）</li>\n            <li>文本文件（.txt）</li>\n        </ul>\n        <ButtonSet>\n            <MainButton onClick={handleOpenFile}>打开文件</MainButton>\n            <button onClick={handleClosePopup}>取消</button>\n        </ButtonSet>\n    </div>);\n};\n\nexport default Open;\n\n// CSS\nconst sub_title = css`\nmargin: 20px 0 5px;\npadding-bottom: 8px;\nborder-bottom: 1px solid #dddddd;\n`;\n\nconst list_wrapper = css`\nmargin: 0;\npadding: 0;\nfont-size: 90%;\nlist-style: circle inside;\n\nli {\nline-height: 2em;\n}\n`;"]},"metadata":{},"sourceType":"module"}