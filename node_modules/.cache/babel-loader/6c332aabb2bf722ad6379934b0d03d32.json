{"ast":null,"code":"import*as actionTypes from'./actionTypes';import{deepCopy}from'../../../methods/assistFunctions';export var defaultValue_history={undo:[],redo:[],last_snapshot:null};export default(function(history,action){switch(action.type){case actionTypes.SET_HISTORY:{var new_history=deepCopy(history);if(new_history.last_snapshot){if(new_history.undo.length>0&&new_history.undo[new_history.undo.length-1].mindmap===action.data.mindmap){new_history.redo.unshift(new_history.last_snapshot);new_history.undo.pop();}else if(new_history.redo.length>0&&new_history.redo[0].mindmap===action.data.mindmap){new_history.undo.push(new_history.last_snapshot);new_history.redo.shift();}else{new_history.undo.push(new_history.last_snapshot);new_history.redo=[];}}new_history.last_snapshot=action.data;return new_history;}case actionTypes.CLEAR_HISTORY:{return defaultValue_history;}default:return history;}});","map":{"version":3,"sources":["/Users/liuhongyang/Documents/GitHub/repositories/mindmap/src/context/reducer/history/index.js"],"names":["actionTypes","deepCopy","defaultValue_history","undo","redo","last_snapshot","history","action","type","SET_HISTORY","new_history","length","mindmap","data","unshift","pop","push","shift","CLEAR_HISTORY"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,eAA7B,CACA,OAAQC,QAAR,KAAuB,kCAAvB,CAEA,MAAO,IAAMC,CAAAA,oBAAoB,CAAG,CAChCC,IAAI,CAAE,EAD0B,CAEhCC,IAAI,CAAE,EAF0B,CAGhCC,aAAa,CAAE,IAHiB,CAA7B,CAMP,eAAe,SAACC,OAAD,CAAUC,MAAV,CAAqB,CAChC,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKR,CAAAA,WAAW,CAACS,WAAjB,CAA8B,CAC1B,GAAMC,CAAAA,WAAW,CAAGT,QAAQ,CAACK,OAAD,CAA5B,CACA,GAAII,WAAW,CAACL,aAAhB,CAA+B,CAC3B,GAAIK,WAAW,CAACP,IAAZ,CAAiBQ,MAAjB,CAA0B,CAA1B,EAA+BD,WAAW,CAACP,IAAZ,CAAiBO,WAAW,CAACP,IAAZ,CAAiBQ,MAAjB,CAA0B,CAA3C,EAA8CC,OAA9C,GAA0DL,MAAM,CAACM,IAAP,CAAYD,OAAzG,CAAkH,CAC9GF,WAAW,CAACN,IAAZ,CAAiBU,OAAjB,CAAyBJ,WAAW,CAACL,aAArC,EACAK,WAAW,CAACP,IAAZ,CAAiBY,GAAjB,GACH,CAHD,IAGO,IAAIL,WAAW,CAACN,IAAZ,CAAiBO,MAAjB,CAA0B,CAA1B,EAA+BD,WAAW,CAACN,IAAZ,CAAiB,CAAjB,EAAoBQ,OAApB,GAAgCL,MAAM,CAACM,IAAP,CAAYD,OAA/E,CAAwF,CAC3FF,WAAW,CAACP,IAAZ,CAAiBa,IAAjB,CAAsBN,WAAW,CAACL,aAAlC,EACAK,WAAW,CAACN,IAAZ,CAAiBa,KAAjB,GACH,CAHM,IAGA,CACHP,WAAW,CAACP,IAAZ,CAAiBa,IAAjB,CAAsBN,WAAW,CAACL,aAAlC,EACAK,WAAW,CAACN,IAAZ,CAAmB,EAAnB,CACH,CACJ,CACDM,WAAW,CAACL,aAAZ,CAA4BE,MAAM,CAACM,IAAnC,CACA,MAAOH,CAAAA,WAAP,CACH,CACD,IAAKV,CAAAA,WAAW,CAACkB,aAAjB,CAAgC,CAC5B,MAAOhB,CAAAA,oBAAP,CACH,CACD,QACI,MAAOI,CAAAA,OAAP,CAtBR,CAwBH,CAzBD","sourcesContent":["import * as actionTypes from './actionTypes';\nimport {deepCopy} from '../../../methods/assistFunctions';\n\nexport const defaultValue_history = {\n    undo: [],\n    redo: [],\n    last_snapshot: null\n};\n\nexport default (history, action) => {\n    switch (action.type) {\n        case actionTypes.SET_HISTORY: {\n            const new_history = deepCopy(history);\n            if (new_history.last_snapshot) {\n                if (new_history.undo.length > 0 && new_history.undo[new_history.undo.length - 1].mindmap === action.data.mindmap) {\n                    new_history.redo.unshift(new_history.last_snapshot);\n                    new_history.undo.pop();\n                } else if (new_history.redo.length > 0 && new_history.redo[0].mindmap === action.data.mindmap) {\n                    new_history.undo.push(new_history.last_snapshot);\n                    new_history.redo.shift();\n                } else {\n                    new_history.undo.push(new_history.last_snapshot);\n                    new_history.redo = [];\n                }\n            }\n            new_history.last_snapshot = action.data;\n            return new_history;\n        }\n        case actionTypes.CLEAR_HISTORY: {\n            return defaultValue_history;\n        }\n        default:\n            return history;\n    }\n};"]},"metadata":{},"sourceType":"module"}