{"ast":null,"code":"module.exports = function (hljs) {\n  /* Variables: simple (eg $(var)) and special (eg $@) */\n  var VARIABLE = {\n    className: 'variable',\n    variants: [{\n      begin: '\\\\$\\\\(' + hljs.UNDERSCORE_IDENT_RE + '\\\\)',\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: /\\$[@%<?\\^\\+\\*]/\n    }]\n  };\n  /* Quoted string with variables inside */\n\n  var QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/,\n    end: /\"/,\n    contains: [hljs.BACKSLASH_ESCAPE, VARIABLE]\n  };\n  /* Function: $(func arg,...) */\n\n  var FUNC = {\n    className: 'variable',\n    begin: /\\$\\([\\w-]+\\s/,\n    end: /\\)/,\n    keywords: {\n      built_in: 'subst patsubst strip findstring filter filter-out sort ' + 'word wordlist firstword lastword dir notdir suffix basename ' + 'addsuffix addprefix join wildcard realpath abspath error warning ' + 'shell origin flavor foreach if or and call eval file value'\n    },\n    contains: [VARIABLE]\n  };\n  /* Variable assignment */\n\n  var VAR_ASSIG = {\n    begin: '^' + hljs.UNDERSCORE_IDENT_RE + '\\\\s*[:+?]?=',\n    illegal: '\\\\n',\n    returnBegin: true,\n    contains: [{\n      begin: '^' + hljs.UNDERSCORE_IDENT_RE,\n      end: '[:+?]?=',\n      excludeEnd: true\n    }]\n  };\n  /* Meta targets (.PHONY) */\n\n  var META = {\n    className: 'meta',\n    begin: /^\\.PHONY:/,\n    end: /$/,\n    keywords: {\n      'meta-keyword': '.PHONY'\n    },\n    lexemes: /[\\.\\w]+/\n  };\n  /* Targets */\n\n  var TARGET = {\n    className: 'section',\n    begin: /^[^\\s]+:/,\n    end: /$/,\n    contains: [VARIABLE]\n  };\n  return {\n    aliases: ['mk', 'mak'],\n    keywords: 'define endef undefine ifdef ifndef ifeq ifneq else endif ' + 'include -include sinclude override export unexport private vpath',\n    lexemes: /[\\w-]+/,\n    contains: [hljs.HASH_COMMENT_MODE, VARIABLE, QUOTE_STRING, FUNC, VAR_ASSIG, META, TARGET]\n  };\n};","map":{"version":3,"sources":["/Users/liuhongyang/Documents/GitHub/repositories/mindmap/node_modules/highlight.js/lib/languages/makefile.js"],"names":["module","exports","hljs","VARIABLE","className","variants","begin","UNDERSCORE_IDENT_RE","contains","BACKSLASH_ESCAPE","QUOTE_STRING","end","FUNC","keywords","built_in","VAR_ASSIG","illegal","returnBegin","excludeEnd","META","lexemes","TARGET","aliases","HASH_COMMENT_MODE"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC9B;AACA,MAAIC,QAAQ,GAAG;AACbC,IAAAA,SAAS,EAAE,UADE;AAEbC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,WAAWJ,IAAI,CAACK,mBAAhB,GAAsC,KAD/C;AAEEC,MAAAA,QAAQ,EAAE,CAACN,IAAI,CAACO,gBAAN;AAFZ,KADQ,EAKR;AACEH,MAAAA,KAAK,EAAE;AADT,KALQ;AAFG,GAAf;AAYA;;AACA,MAAII,YAAY,GAAG;AACjBN,IAAAA,SAAS,EAAE,QADM;AAEjBE,IAAAA,KAAK,EAAE,GAFU;AAELK,IAAAA,GAAG,EAAE,GAFA;AAGjBH,IAAAA,QAAQ,EAAE,CACRN,IAAI,CAACO,gBADG,EAERN,QAFQ;AAHO,GAAnB;AAQA;;AACA,MAAIS,IAAI,GAAG;AACTR,IAAAA,SAAS,EAAE,UADF;AAETE,IAAAA,KAAK,EAAE,cAFE;AAEcK,IAAAA,GAAG,EAAE,IAFnB;AAGTE,IAAAA,QAAQ,EAAE;AACRC,MAAAA,QAAQ,EACN,4DACA,8DADA,GAEA,mEAFA,GAGA;AALM,KAHD;AAUTN,IAAAA,QAAQ,EAAE,CACRL,QADQ;AAVD,GAAX;AAcA;;AACA,MAAIY,SAAS,GAAG;AACdT,IAAAA,KAAK,EAAE,MAAMJ,IAAI,CAACK,mBAAX,GAAiC,aAD1B;AAEdS,IAAAA,OAAO,EAAE,KAFK;AAGdC,IAAAA,WAAW,EAAE,IAHC;AAIdT,IAAAA,QAAQ,EAAE,CACR;AACEF,MAAAA,KAAK,EAAE,MAAMJ,IAAI,CAACK,mBADpB;AACyCI,MAAAA,GAAG,EAAE,SAD9C;AAEEO,MAAAA,UAAU,EAAE;AAFd,KADQ;AAJI,GAAhB;AAWA;;AACA,MAAIC,IAAI,GAAG;AACTf,IAAAA,SAAS,EAAE,MADF;AAETE,IAAAA,KAAK,EAAE,WAFE;AAEWK,IAAAA,GAAG,EAAE,GAFhB;AAGTE,IAAAA,QAAQ,EAAE;AAAC,sBAAgB;AAAjB,KAHD;AAITO,IAAAA,OAAO,EAAE;AAJA,GAAX;AAMA;;AACA,MAAIC,MAAM,GAAG;AACXjB,IAAAA,SAAS,EAAE,SADA;AAEXE,IAAAA,KAAK,EAAE,UAFI;AAEQK,IAAAA,GAAG,EAAE,GAFb;AAGXH,IAAAA,QAAQ,EAAE,CAACL,QAAD;AAHC,GAAb;AAKA,SAAO;AACLmB,IAAAA,OAAO,EAAE,CAAC,IAAD,EAAO,KAAP,CADJ;AAELT,IAAAA,QAAQ,EACN,8DACA,kEAJG;AAKLO,IAAAA,OAAO,EAAE,QALJ;AAMLZ,IAAAA,QAAQ,EAAE,CACRN,IAAI,CAACqB,iBADG,EAERpB,QAFQ,EAGRO,YAHQ,EAIRE,IAJQ,EAKRG,SALQ,EAMRI,IANQ,EAORE,MAPQ;AANL,GAAP;AAgBD,CA/ED","sourcesContent":["module.exports = function(hljs) {\n  /* Variables: simple (eg $(var)) and special (eg $@) */\n  var VARIABLE = {\n    className: 'variable',\n    variants: [\n      {\n        begin: '\\\\$\\\\(' + hljs.UNDERSCORE_IDENT_RE + '\\\\)',\n        contains: [hljs.BACKSLASH_ESCAPE],\n      },\n      {\n        begin: /\\$[@%<?\\^\\+\\*]/\n      },\n    ]\n  };\n  /* Quoted string with variables inside */\n  var QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/, end: /\"/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      VARIABLE,\n    ]\n  };\n  /* Function: $(func arg,...) */\n  var FUNC = {\n    className: 'variable',\n    begin: /\\$\\([\\w-]+\\s/, end: /\\)/,\n    keywords: {\n      built_in:\n        'subst patsubst strip findstring filter filter-out sort ' +\n        'word wordlist firstword lastword dir notdir suffix basename ' +\n        'addsuffix addprefix join wildcard realpath abspath error warning ' +\n        'shell origin flavor foreach if or and call eval file value',\n    },\n    contains: [\n      VARIABLE,\n    ]\n  };\n  /* Variable assignment */\n  var VAR_ASSIG = {\n    begin: '^' + hljs.UNDERSCORE_IDENT_RE + '\\\\s*[:+?]?=',\n    illegal: '\\\\n',\n    returnBegin: true,\n    contains: [\n      {\n        begin: '^' + hljs.UNDERSCORE_IDENT_RE, end: '[:+?]?=',\n        excludeEnd: true,\n      }\n    ]\n  };\n  /* Meta targets (.PHONY) */\n  var META = {\n    className: 'meta',\n    begin: /^\\.PHONY:/, end: /$/,\n    keywords: {'meta-keyword': '.PHONY'},\n    lexemes: /[\\.\\w]+/\n  };\n  /* Targets */\n  var TARGET = {\n    className: 'section',\n    begin: /^[^\\s]+:/, end: /$/,\n    contains: [VARIABLE,]\n  };\n  return {\n    aliases: ['mk', 'mak'],\n    keywords:\n      'define endef undefine ifdef ifndef ifeq ifneq else endif ' +\n      'include -include sinclude override export unexport private vpath',\n    lexemes: /[\\w-]+/,\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      VARIABLE,\n      QUOTE_STRING,\n      FUNC,\n      VAR_ASSIG,\n      META,\n      TARGET,\n    ]\n  };\n};"]},"metadata":{},"sourceType":"script"}