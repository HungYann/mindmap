{"ast":null,"code":"import hashString from '@emotion/hash';\nimport unitless from '@emotion/unitless';\nimport memoize from '@emotion/memoize';\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\nvar processStyleName = memoize(function (styleName) {\n  return styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  if (value == null || typeof value === 'boolean') {\n    return '';\n  }\n\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          value = value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (unitless[key] !== 1 && key.charCodeAt(1) !== 45 && // custom properties\n  typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var contentValuePattern = /(attr|calc|counters?|url)\\(/;\n  var contentValues = ['normal', 'none', 'counter', 'open-quote', 'close-quote', 'no-open-quote', 'no-close-quote', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n  var hyphenatedCache = {};\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        console.error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    var processed = oldProcessStyleValue(key, value);\n    var isCssVariable = key.charCodeAt(1) === 45;\n\n    if (processed !== '' && !isCssVariable && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n      hyphenatedCache[key] = true;\n      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, char) {\n        return char.toUpperCase();\n      }) + \"?\");\n    }\n\n    return processed;\n  };\n}\n\nvar shouldWarnAboutInterpolatingClassNameFromCss = true;\n\nfunction handleInterpolation(mergedProps, registered, interpolation, couldBeSelectorInterpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if (process.env.NODE_ENV !== 'production' && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles;\n\n          if (process.env.NODE_ENV !== 'production' && interpolation.map !== undefined) {\n            styles += interpolation.map;\n          }\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result, couldBeSelectorInterpolation);\n        } else if (process.env.NODE_ENV !== 'production') {\n          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n      }\n    // eslint-disable-next-line no-fallthrough\n\n    default:\n      {\n        if (registered == null) {\n          return interpolation;\n        }\n\n        var cached = registered[interpolation];\n\n        if (process.env.NODE_ENV !== 'production' && couldBeSelectorInterpolation && shouldWarnAboutInterpolatingClassNameFromCss && cached !== undefined) {\n          console.error('Interpolating a className from css`` is not recommended and will cause problems with composition.\\n' + 'Interpolating a className from css`` will be completely unsupported in a future major version of Emotion');\n          shouldWarnAboutInterpolatingClassNameFromCss = false;\n        }\n\n        return cached !== undefined && !couldBeSelectorInterpolation ? cached : interpolation;\n      }\n  }\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i], false);\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + \"{\" + registered[value] + \"}\";\n        } else {\n          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n        }\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n          throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n          }\n        } else {\n          string += _key + \"{\" + handleInterpolation(mergedProps, registered, value, false) + \"}\";\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*;/g;\nvar sourceMapPattern;\n\nif (process.env.NODE_ENV !== 'production') {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//;\n} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\n\nvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings, false);\n  } else {\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i], styles.charCodeAt(styles.length - 1) === 46);\n\n    if (stringMode) {\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (process.env.NODE_ENV !== 'production') {\n    styles = styles.replace(sourceMapPattern, function (match) {\n      sourceMap = match;\n      return '';\n    });\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + // $FlowFixMe we know it's not null\n    match[1];\n  }\n\n  var name = hashString(styles) + identifierName;\n\n  if (process.env.NODE_ENV !== 'production') {\n    return {\n      name: name,\n      styles: styles,\n      map: sourceMap,\n      next: cursor\n    };\n  }\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\nexport { serializeStyles };","map":{"version":3,"sources":["/Users/liuhongyang/Documents/GitHub/repositories/mindmap/node_modules/@emotion/serialize/dist/serialize.browser.esm.js"],"names":["hashString","unitless","memoize","hyphenateRegex","animationRegex","processStyleName","styleName","replace","toLowerCase","processStyleValue","key","value","match","p1","p2","cursor","name","styles","next","charCodeAt","process","env","NODE_ENV","contentValuePattern","contentValues","oldProcessStyleValue","msPattern","hyphenPattern","hyphenatedCache","indexOf","test","charAt","length","console","error","processed","isCssVariable","undefined","str","char","toUpperCase","shouldWarnAboutInterpolatingClassNameFromCss","handleInterpolation","mergedProps","registered","interpolation","couldBeSelectorInterpolation","__emotion_styles","toString","Error","anim","map","createStringFromObject","previousCursor","result","cached","obj","string","Array","isArray","i","_key","_i","labelPattern","sourceMapPattern","serializeStyles","args","stringMode","strings","raw","sourceMap","lastIndex","identifierName","exec"],"mappings":"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","sourcesContent":["import hashString from '@emotion/hash';\nimport unitless from '@emotion/unitless';\nimport memoize from '@emotion/memoize';\n\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\nvar processStyleName = memoize(function (styleName) {\n  return styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  if (value == null || typeof value === 'boolean') {\n    return '';\n  }\n\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          value = value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (unitless[key] !== 1 && key.charCodeAt(1) !== 45 && // custom properties\n  typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var contentValuePattern = /(attr|calc|counters?|url)\\(/;\n  var contentValues = ['normal', 'none', 'counter', 'open-quote', 'close-quote', 'no-open-quote', 'no-close-quote', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n  var hyphenatedCache = {};\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        console.error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    var processed = oldProcessStyleValue(key, value);\n    var isCssVariable = key.charCodeAt(1) === 45;\n\n    if (processed !== '' && !isCssVariable && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n      hyphenatedCache[key] = true;\n      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, char) {\n        return char.toUpperCase();\n      }) + \"?\");\n    }\n\n    return processed;\n  };\n}\n\nvar shouldWarnAboutInterpolatingClassNameFromCss = true;\n\nfunction handleInterpolation(mergedProps, registered, interpolation, couldBeSelectorInterpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if (process.env.NODE_ENV !== 'production' && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles;\n\n          if (process.env.NODE_ENV !== 'production' && interpolation.map !== undefined) {\n            styles += interpolation.map;\n          }\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result, couldBeSelectorInterpolation);\n        } else if (process.env.NODE_ENV !== 'production') {\n          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n      }\n    // eslint-disable-next-line no-fallthrough\n\n    default:\n      {\n        if (registered == null) {\n          return interpolation;\n        }\n\n        var cached = registered[interpolation];\n\n        if (process.env.NODE_ENV !== 'production' && couldBeSelectorInterpolation && shouldWarnAboutInterpolatingClassNameFromCss && cached !== undefined) {\n          console.error('Interpolating a className from css`` is not recommended and will cause problems with composition.\\n' + 'Interpolating a className from css`` will be completely unsupported in a future major version of Emotion');\n          shouldWarnAboutInterpolatingClassNameFromCss = false;\n        }\n\n        return cached !== undefined && !couldBeSelectorInterpolation ? cached : interpolation;\n      }\n  }\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i], false);\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + \"{\" + registered[value] + \"}\";\n        } else {\n          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n        }\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n          throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n          }\n        } else {\n          string += _key + \"{\" + handleInterpolation(mergedProps, registered, value, false) + \"}\";\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*;/g;\nvar sourceMapPattern;\n\nif (process.env.NODE_ENV !== 'production') {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//;\n} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\nvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings, false);\n  } else {\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i], styles.charCodeAt(styles.length - 1) === 46);\n\n    if (stringMode) {\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (process.env.NODE_ENV !== 'production') {\n    styles = styles.replace(sourceMapPattern, function (match) {\n      sourceMap = match;\n      return '';\n    });\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + // $FlowFixMe we know it's not null\n    match[1];\n  }\n\n  var name = hashString(styles) + identifierName;\n\n  if (process.env.NODE_ENV !== 'production') {\n    return {\n      name: name,\n      styles: styles,\n      map: sourceMap,\n      next: cursor\n    };\n  }\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\nexport { serializeStyles };\n"]},"metadata":{},"sourceType":"module"}