{"ast":null,"code":"var _jsxFileName = \"/Users/liuhongyang/Documents/GitHub/repositories/mindmap/src/components/Popup/subComponents/Theme/index.js\";\nimport React, { useEffect } from 'react';\nimport { css } from 'emotion';\nimport useTheme from '../../../../customHooks/useTheme';\nimport { ButtonSet, Highlight } from '../../common/styledComponents';\nimport ThemeListItem from './ThemeListItem';\n\nconst Theme = ({\n  handleClosePopup\n}) => {\n  const {\n    theme_index,\n    theme_list,\n    setTheme\n  } = useTheme();\n  useEffect(() => {\n    localStorage.setItem('theme_index', theme_index);\n  }, [theme_index]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Highlight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"\\u8BF7\\u9009\\u62E9\\u4E3B\\u9898\\uFF1A\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: list_wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, theme_list.map((theme, index) => /*#__PURE__*/React.createElement(ThemeListItem, {\n    key: theme.main,\n    theme: theme,\n    index: index,\n    is_current: theme_index === index,\n    setTheme: setTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 47\n    }\n  }))), /*#__PURE__*/React.createElement(ButtonSet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClosePopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"\\u5B8C\\u6210\")));\n};\n\nexport default Theme; // CSS\n\nconst list_wrapper = css`\ndisplay: flex;\njustify-content: space-between;\nflex-wrap: wrap;\npadding: 0;\nlist-style: none;\n`;","map":{"version":3,"sources":["/Users/liuhongyang/Documents/GitHub/repositories/mindmap/src/components/Popup/subComponents/Theme/index.js"],"names":["React","useEffect","css","useTheme","ButtonSet","Highlight","ThemeListItem","Theme","handleClosePopup","theme_index","theme_list","setTheme","localStorage","setItem","list_wrapper","map","theme","index","main"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,GAAR,QAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAAQC,SAAR,EAAmBC,SAAnB,QAAmC,+BAAnC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAwB;AAClC,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA,UAAd;AAA0BC,IAAAA;AAA1B,MAAsCR,QAAQ,EAApD;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCJ,WAApC;AACH,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAIA,sBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACJ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADI,eAEJ;AAAI,IAAA,SAAS,EAAEK,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,UAAU,CAACK,GAAX,CAAe,CAACC,KAAD,EAAQC,KAAR,kBAAkB,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAED,KAAK,CAACE,IAA1B;AAAgC,IAAA,KAAK,EAAEF,KAAvC;AAA8C,IAAA,KAAK,EAAEC,KAArD;AACe,IAAA,UAAU,EAAER,WAAW,KAAKQ,KAD3C;AACkD,IAAA,QAAQ,EAAEN,QAD5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjC,CADL,CAFI,eAMJ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAEH,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CANI,CAAR;AAUH,CAjBD;;AAmBA,eAAeD,KAAf,C,CAEA;;AACA,MAAMO,YAAY,GAAGZ,GAAI;;;;;;CAAzB","sourcesContent":["import React, {useEffect} from 'react';\nimport {css} from 'emotion';\nimport useTheme from '../../../../customHooks/useTheme';\nimport {ButtonSet, Highlight} from '../../common/styledComponents';\nimport ThemeListItem from './ThemeListItem';\n\nconst Theme = ({handleClosePopup}) => {\n    const {theme_index, theme_list, setTheme} = useTheme();\n\n    useEffect(() => {\n        localStorage.setItem('theme_index', theme_index);\n    }, [theme_index]);\n\n    return (<div>\n        <Highlight>请选择主题：</Highlight>\n        <ul className={list_wrapper}>\n            {theme_list.map((theme, index) => <ThemeListItem key={theme.main} theme={theme} index={index}\n                                                             is_current={theme_index === index} setTheme={setTheme} />)}\n        </ul>\n        <ButtonSet>\n            <button onClick={handleClosePopup}>完成</button>\n        </ButtonSet>\n    </div>);\n};\n\nexport default Theme;\n\n// CSS\nconst list_wrapper = css`\ndisplay: flex;\njustify-content: space-between;\nflex-wrap: wrap;\npadding: 0;\nlist-style: none;\n`;"]},"metadata":{},"sourceType":"module"}