{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/liuhongyang/Documents/GitHub/repositories/mindmap/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/liuhongyang/Documents/GitHub/repositories/mindmap/src/features/EditPanel/index.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    margin-top:20px;\\n    width:295px;\\n    height:460px;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\nheight: 500px;\\nwidth: 300px;\\ntop: 20px;\\nright: 40px;\\nmargin: 56px 0 0;\\noverflow: auto;\\nposition: fixed;\\n//z-index: 10;\\nborder: 2px solid #eeee;\\nborder-radius: 10px;\\nbackground: #fff;\\nbackground:rgba(255,255,255,1);\\nbox-shadow:0px 2px 12px 0px rgba(0,0,0,0.16);\\npadding:20px 10px;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext, useEffect } from 'react';\nimport { css } from 'emotion';\nimport useEditPanel from '../../customHooks/useEditPanel';\nimport useMindmap from '../../customHooks/useMindmap';\nimport { context } from '../../context';\nimport MdEditor from '../../components/mdEditor';\n\nconst EditPanel = () => {\n  // const self = useRef();\n  const _useContext = useContext(context),\n        epState = _useContext.editPanel.state,\n        nState = _useContext.nodeStatus.state;\n\n  const _nState$cur_node_info = nState.cur_node_info,\n        _nState$cur_node_info2 = _nState$cur_node_info.info,\n        info = _nState$cur_node_info2 === void 0 ? '' : _nState$cur_node_info2,\n        text = _nState$cur_node_info.text,\n        id = _nState$cur_node_info.id;\n  const mindmapHook = useMindmap();\n  const editPanleHook = useEditPanel();\n\n  if (!epState.isShow) {\n    return null;\n  }\n\n  return React.createElement(\"div\", {\n    className: show,\n    onClick: e => e.stopPropagation(),\n    onKeyDown: e => e.stopPropagation(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"\\u5F53\\u524D\\u7F16\\u8F91\\u8282\\u70B9\\uFF1A\", text || '无', React.createElement(\"i\", {\n    className: \"zwicon-close\",\n    style: close,\n    onClick: () => editPanleHook.toggelPanelShow(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(MdEditor, {\n    className: mdEditor,\n    propText: info,\n    onBlur: value => id && mindmapHook.editNodeInfo(id, value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n};\n\nexport default EditPanel; // CSS\n\nconst show = css(_templateObject());\nconst close = {\n  fontSize: 20,\n  position: 'absolute',\n  cursor: 'pointer',\n  right: '10px',\n  top: '5px'\n};\nconst mdEditor = css(_templateObject2());","map":{"version":3,"sources":["/Users/liuhongyang/Documents/GitHub/repositories/mindmap/src/features/EditPanel/index.js"],"names":["React","useContext","useEffect","css","useEditPanel","useMindmap","context","MdEditor","EditPanel","epState","editPanel","state","nState","nodeStatus","cur_node_info","info","text","id","mindmapHook","editPanleHook","isShow","show","e","stopPropagation","close","toggelPanelShow","mdEditor","value","editNodeInfo","fontSize","position","cursor","right","top"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAAQC,GAAR,QAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAAQC,OAAR,QAAsB,eAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB;AADoB,sBAG0CP,UAAU,CAACK,OAAD,CAHpD;AAAA,QAGKG,OAHL,eAGbC,SAHa,CAGDC,KAHC;AAAA,QAGgCC,MAHhC,eAGcC,UAHd,CAG0BF,KAH1B;;AAAA,gCAIoBC,MAJpB,CAIbE,aAJa;AAAA,uDAIEC,IAJF;AAAA,QAIEA,IAJF,uCAIO,EAJP;AAAA,QAIUC,IAJV,yBAIUA,IAJV;AAAA,QAIeC,EAJf,yBAIeA,EAJf;AAMpB,QAAMC,WAAW,GAACb,UAAU,EAA5B;AACA,QAAMc,aAAa,GAACf,YAAY,EAAhC;;AAEA,MAAG,CAACK,OAAO,CAACW,MAAZ,EAAmB;AACf,WAAO,IAAP;AACH;;AAED,SACI;AAAK,IAAA,SAAS,EAAEC,IAAhB;AAAsB,IAAA,OAAO,EAAEC,CAAC,IAAEA,CAAC,CAACC,eAAF,EAAlC;AAAuD,IAAA,SAAS,EAAED,CAAC,IAAEA,CAAC,CAACC,eAAF,EAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDACYP,IAAI,IAAI,GADpB,EAGI;AAAG,IAAA,SAAS,EAAC,cAAb;AAA4B,IAAA,KAAK,EAAEQ,KAAnC;AAA0C,IAAA,OAAO,EAAE,MAAIL,aAAa,CAACM,eAAd,CAA8B,KAA9B,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,QAAD;AACI,IAAA,SAAS,EAAEC,QADf;AAEI,IAAA,QAAQ,EAAEX,IAFd;AAGI,IAAA,MAAM,EAAGY,KAAD,IAAUV,EAAE,IAAIC,WAAW,CAACU,YAAZ,CAAyBX,EAAzB,EAA4BU,KAA5B,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAcH,CA3BD;;AA6BA,eAAenB,SAAf,C,CAEA;;AACA,MAAMa,IAAI,GAAGlB,GAAH,mBAAV;AAiBA,MAAMqB,KAAK,GAAC;AACRK,EAAAA,QAAQ,EAAC,EADD;AAERC,EAAAA,QAAQ,EAAE,UAFF;AAGRC,EAAAA,MAAM,EAAC,SAHC;AAIRC,EAAAA,KAAK,EAAE,MAJC;AAKRC,EAAAA,GAAG,EAAE;AALG,CAAZ;AAQA,MAAMP,QAAQ,GAACvB,GAAD,oBAAd","sourcesContent":["import React, {useContext, useEffect} from 'react';\nimport {css} from 'emotion';\nimport useEditPanel from '../../customHooks/useEditPanel';\nimport useMindmap from '../../customHooks/useMindmap';\nimport {context} from '../../context'\nimport MdEditor from '../../components/mdEditor';\n\nconst EditPanel = () => {\n    // const self = useRef();\n    \n    const {editPanel: {state:epState},nodeStatus:{state:nState}} =useContext(context)\n    const {cur_node_info:{info='',text,id}}=nState\n    \n    const mindmapHook=useMindmap()\n    const editPanleHook=useEditPanel();\n    \n    if(!epState.isShow){\n        return null;\n    }\n    \n    return (        \n        <div className={show} onClick={e=>e.stopPropagation()} onKeyDown={e=>e.stopPropagation()}>\n            当前编辑节点：{text || '无'}        \n\n            <i className=\"zwicon-close\" style={close} onClick={()=>editPanleHook.toggelPanelShow(false)}></i>                        \n            <MdEditor \n                className={mdEditor} \n                propText={info}\n                onBlur={(value)=> id && mindmapHook.editNodeInfo(id,value)}\n            />                       \n            {/* <Button type=\"primary\" onClick={()=>mindmapHook.editNodeInfo(id,inputVal)}>保存</Button>\n            <Button type=\"primary\" onClick={()=>editPanleHook.toggelPanelShow(false)}>关闭</Button> */}            \n        </div>\n    );\n};\n\nexport default EditPanel;\n\n// CSS\nconst show = css`\nheight: 500px;\nwidth: 300px;\ntop: 20px;\nright: 40px;\nmargin: 56px 0 0;\noverflow: auto;\nposition: fixed;\n//z-index: 10;\nborder: 2px solid #eeee;\nborder-radius: 10px;\nbackground: #fff;\nbackground:rgba(255,255,255,1);\nbox-shadow:0px 2px 12px 0px rgba(0,0,0,0.16);\npadding:20px 10px;\n`;\n\nconst close={    \n    fontSize:20,\n    position: 'absolute',\n    cursor:'pointer',\n    right: '10px',\n    top: '5px',\n}\n\nconst mdEditor=css`\n    margin-top:20px;\n    width:295px;\n    height:460px;\n`"]},"metadata":{},"sourceType":"module"}