{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/liuhongyang/Desktop/RMind-develop/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/liuhongyang/Desktop/RMind-develop/src/components/Popup/subComponents/Export.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\npadding: 0;\\nlist-style: none;\\n\\nli {\\npadding: 5px 0 5px 5px;\\nborder-left: 3px solid transparent;\\nborder-bottom: 1px solid #dddddd;\\nline-height: 30px;\\ncursor: pointer;\\n}\\n\\nli:last-of-type {\\nborder-bottom: none;\\n}\\n\\nli:hover {\\nborder-left: 3px solid var(\", \");\\n}\\n\\nli i {\\nmargin-right: 10px;\\nfont-size: 30px;\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from 'react';\nimport { css } from 'emotion';\nimport { context } from '../../../context';\nimport useMindmap from '../../../customHooks/useMindmap';\nimport * as refer from '../../../statics/refer';\nimport html2canvas from 'html2canvas';\nimport { downloadFile } from '../../../methods/assistFunctions';\nimport mindmapExporter from '../../../methods/mindmapExporter';\nimport { Highlight, ButtonSet } from '../common/styledComponents';\n\nconst Export = ({\n  handleClosePopup\n}) => {\n  const _useContext = useContext(context),\n        mindmap = _useContext.mindmap.state,\n        title = _useContext.global.state.title;\n\n  const _useMindmap = useMindmap(),\n        clearNodeStatus = _useMindmap.clearNodeStatus;\n\n  const handleExportPNG = () => {\n    clearNodeStatus(); // 防止选中状态时的工具条等也被导出到图像\n\n    html2canvas(document.getElementById(refer.MINDMAP_ID)).then(canvas => {\n      let url = canvas.toDataURL('image/png');\n      downloadFile(url, \"\".concat(title, \".png\"));\n    });\n  };\n\n  const handleExportText = format => {\n    const data = mindmapExporter(mindmap, format);\n    let url = \"data:text/plain,\".concat(encodeURIComponent(data));\n    downloadFile(url, \"\".concat(title, \".\").concat(format.toLowerCase()));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Highlight, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"\\u8BF7\\u9009\\u62E9\\u5BFC\\u51FA\\u683C\\u5F0F\\uFF1A\"), React.createElement(\"ul\", {\n    className: list_wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    onClick: handleExportPNG,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: 'zwicon-file-image',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), \"PNG \\u56FE\\u7247\\uFF08.png\\uFF09\"), React.createElement(\"li\", {\n    onClick: () => {\n      handleExportText('KM');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: 'zwicon-file-pdf',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), \"\\u767E\\u5EA6\\u8111\\u56FE\\uFF08.km\\uFF09\"), React.createElement(\"li\", {\n    onClick: () => {\n      handleExportText('MD');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: 'zwicon-file-table',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), \"Markdown\\uFF08.md\\uFF09\"), React.createElement(\"li\", {\n    onClick: () => {\n      handleExportText('TXT');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: 'zwicon-file-font',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), \"\\u6587\\u672C\\u6587\\u4EF6\\uFF08.txt\\uFF09\")), React.createElement(ButtonSet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: handleClosePopup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"\\u5B8C\\u6210\")));\n};\n\nexport default Export; // CSS\n\nconst list_wrapper = css(_templateObject(), refer.THEME_EX);","map":{"version":3,"sources":["/Users/liuhongyang/Desktop/RMind-develop/src/components/Popup/subComponents/Export.js"],"names":["React","useContext","css","context","useMindmap","refer","html2canvas","downloadFile","mindmapExporter","Highlight","ButtonSet","Export","handleClosePopup","mindmap","state","title","global","clearNodeStatus","handleExportPNG","document","getElementById","MINDMAP_ID","then","canvas","url","toDataURL","handleExportText","format","data","encodeURIComponent","toLowerCase","list_wrapper","THEME_EX"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,GAAR,QAAkB,SAAlB;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,wBAAvB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SAAQC,YAAR,QAA2B,kCAA3B;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,SAAQC,SAAR,EAAmBC,SAAnB,QAAmC,4BAAnC;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAwB;AAAA,sBAC2BX,UAAU,CAACE,OAAD,CADrC;AAAA,QACXU,OADW,eAC5BA,OAD4B,CAClBC,KADkB;AAAA,QACgBC,KADhB,eACDC,MADC,CACQF,KADR,CACgBC,KADhB;;AAAA,sBAETX,UAAU,EAFD;AAAA,QAE5Ba,eAF4B,eAE5BA,eAF4B;;AAInC,QAAMC,eAAe,GAAG,MAAM;AAC1BD,IAAAA,eAAe,GADW,CACP;;AACnBX,IAAAA,WAAW,CAACa,QAAQ,CAACC,cAAT,CAAwBf,KAAK,CAACgB,UAA9B,CAAD,CAAX,CAAuDC,IAAvD,CAA4DC,MAAM,IAAI;AAClE,UAAIC,GAAG,GAAGD,MAAM,CAACE,SAAP,CAAiB,WAAjB,CAAV;AACAlB,MAAAA,YAAY,CAACiB,GAAD,YAAST,KAAT,UAAZ;AACH,KAHD;AAIH,GAND;;AAQA,QAAMW,gBAAgB,GAAGC,MAAM,IAAI;AAC/B,UAAMC,IAAI,GAAGpB,eAAe,CAACK,OAAD,EAAUc,MAAV,CAA5B;AACA,QAAIH,GAAG,6BAAsBK,kBAAkB,CAACD,IAAD,CAAxC,CAAP;AACArB,IAAAA,YAAY,CAACiB,GAAD,YAAST,KAAT,cAAkBY,MAAM,CAACG,WAAP,EAAlB,EAAZ;AACH,GAJD;;AAMA,SAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDADI,EAEJ;AAAI,IAAA,SAAS,EAAEC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,OAAO,EAAEb,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8B;AAAG,IAAA,SAAS,EAAE,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,qCADJ,EAEI;AAAI,IAAA,OAAO,EAAE,MAAM;AAAEQ,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AAAyB,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgD;AAAG,IAAA,SAAS,EAAE,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhD,4CAFJ,EAGI;AAAI,IAAA,OAAO,EAAE,MAAM;AAAEA,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AAAyB,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgD;AAAG,IAAA,SAAS,EAAE,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhD,4BAHJ,EAII;AAAI,IAAA,OAAO,EAAE,MAAM;AAAEA,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AAA0B,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiD;AAAG,IAAA,SAAS,EAAE,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjD,6CAJJ,CAFI,EAQJ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAEd,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CARI,CAAR;AAYH,CA9BD;;AAgCA,eAAeD,MAAf,C,CAEA;;AACA,MAAMoB,YAAY,GAAG7B,GAAH,oBAiBWG,KAAK,CAAC2B,QAjBjB,CAAlB","sourcesContent":["import React, {useContext} from 'react';\nimport {css} from 'emotion';\nimport {context} from '../../../context';\nimport useMindmap from '../../../customHooks/useMindmap';\nimport * as refer from '../../../statics/refer';\nimport html2canvas from 'html2canvas';\nimport {downloadFile} from '../../../methods/assistFunctions';\nimport mindmapExporter from '../../../methods/mindmapExporter';\nimport {Highlight, ButtonSet} from '../common/styledComponents';\n\nconst Export = ({handleClosePopup}) => {\n    const {mindmap: {state: mindmap}, global: {state: {title}}} = useContext(context);\n    const {clearNodeStatus} = useMindmap();\n\n    const handleExportPNG = () => {\n        clearNodeStatus(); // 防止选中状态时的工具条等也被导出到图像\n        html2canvas(document.getElementById(refer.MINDMAP_ID)).then(canvas => {\n            let url = canvas.toDataURL('image/png');\n            downloadFile(url, `${title}.png`);\n        });\n    };\n\n    const handleExportText = format => {\n        const data = mindmapExporter(mindmap, format);\n        let url = `data:text/plain,${encodeURIComponent(data)}`;\n        downloadFile(url, `${title}.${format.toLowerCase()}`);\n    };\n\n    return (<div>\n        <Highlight>请选择导出格式：</Highlight>\n        <ul className={list_wrapper}>\n            <li onClick={handleExportPNG}><i className={'zwicon-file-image'} />PNG 图片（.png）</li>\n            <li onClick={() => { handleExportText('KM'); }}><i className={'zwicon-file-pdf'} />百度脑图（.km）</li>\n            <li onClick={() => { handleExportText('MD'); }}><i className={'zwicon-file-table'} />Markdown（.md）</li>\n            <li onClick={() => { handleExportText('TXT'); }}><i className={'zwicon-file-font'} />文本文件（.txt）</li>\n        </ul>\n        <ButtonSet>\n            <button onClick={handleClosePopup}>完成</button>\n        </ButtonSet>\n    </div>);\n};\n\nexport default Export;\n\n// CSS\nconst list_wrapper = css`\npadding: 0;\nlist-style: none;\n\nli {\npadding: 5px 0 5px 5px;\nborder-left: 3px solid transparent;\nborder-bottom: 1px solid #dddddd;\nline-height: 30px;\ncursor: pointer;\n}\n\nli:last-of-type {\nborder-bottom: none;\n}\n\nli:hover {\nborder-left: 3px solid var(${refer.THEME_EX});\n}\n\nli i {\nmargin-right: 10px;\nfont-size: 30px;\n}\n`;"]},"metadata":{},"sourceType":"module"}