{"ast":null,"code":"import*as actionTypes from'./actionTypes';import{NEW_NODE_TEXT}from'../../../statics/refer';export var toggleChildren=function toggleChildren(node_id,bool){return{type:actionTypes.TOGGLE_CHILDREN,data:{node_id:node_id,node:{showChildren:bool}}};};export var addChild=function addChild(node_id,new_node_id){return{type:actionTypes.ADD_CHILD,data:{node_id:node_id,node:{id:new_node_id,text:NEW_NODE_TEXT,showChildren:true,children:[]}}};};export var addSibling=function addSibling(node_id,parent_id,new_node_id){return{type:actionTypes.ADD_SIBLING,data:{node_id:node_id,parent_id:parent_id,node:{id:new_node_id,text:NEW_NODE_TEXT,showChildren:true,children:[]}}};};export var moveNode=function moveNode(node_id,target_id,parent_id,is_sibling){return{type:actionTypes.MOVE_NODE,data:{node_id:node_id,target_id:target_id,parent_id:parent_id,is_sibling:is_sibling}};};export var changeText=function changeText(node_id,text){return{type:actionTypes.CHANGE_TEXT,data:{node_id:node_id,node:{text:text}}};};export var changeInfo=function changeInfo(node_id,info){return{type:actionTypes.CHANGE_TEXT,data:{node_id:node_id,node:{info:info}}};};export var deleteNode=function deleteNode(node_id,parent_id){return{type:actionTypes.DELETE_NODE,data:{node_id:node_id,parent_id:parent_id}};};export var expandAll=function expandAll(node_id){return{type:actionTypes.EXPAND_ALL,data:{node_id:node_id}};};export var setMindmap=function setMindmap(mindmap){return{type:actionTypes.SET_MINDMAP,data:{mindmap:mindmap}};};","map":{"version":3,"sources":["/Users/liuhongyang/Documents/GitHub/repositories/mindmap/src/context/reducer/mindmap/actionCreator.js"],"names":["actionTypes","NEW_NODE_TEXT","toggleChildren","node_id","bool","type","TOGGLE_CHILDREN","data","node","showChildren","addChild","new_node_id","ADD_CHILD","id","text","children","addSibling","parent_id","ADD_SIBLING","moveNode","target_id","is_sibling","MOVE_NODE","changeText","CHANGE_TEXT","changeInfo","info","deleteNode","DELETE_NODE","expandAll","EXPAND_ALL","setMindmap","mindmap","SET_MINDMAP"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport {NEW_NODE_TEXT} from '../../../statics/refer';\n\nexport const toggleChildren = (node_id, bool) => ({\n    type: actionTypes.TOGGLE_CHILDREN,\n    data: {\n        node_id,\n        node: {\n            showChildren: bool\n        }\n    }\n});\n\nexport const addChild = (node_id, new_node_id) => ({\n    type: actionTypes.ADD_CHILD,\n    data: {\n        node_id,\n        node: {\n            id: new_node_id,\n            text: NEW_NODE_TEXT,\n            showChildren: true,\n            children: []\n        }\n    }\n});\n\nexport const addSibling = (node_id, parent_id, new_node_id) => ({\n    type: actionTypes.ADD_SIBLING,\n    data: {\n        node_id,\n        parent_id,\n        node: {\n            id: new_node_id,\n            text: NEW_NODE_TEXT,\n            showChildren: true,\n            children: []\n        }\n    }\n});\n\nexport const moveNode = (node_id, target_id, parent_id, is_sibling) => ({\n    type: actionTypes.MOVE_NODE,\n    data: {\n        node_id,\n        target_id,\n        parent_id,\n        is_sibling\n    }\n});\n\nexport const changeText = (node_id, text) => ({\n    type: actionTypes.CHANGE_TEXT,\n    data: {\n        node_id,\n        node: {\n            text\n        }\n    }\n});\n\nexport const changeInfo = (node_id, info) => ({\n    type: actionTypes.CHANGE_TEXT,\n    data: {\n        node_id,\n        node: {\n            info\n        }\n    }\n});\n\nexport const deleteNode = (node_id, parent_id) => ({\n    type: actionTypes.DELETE_NODE,\n    data: {\n        node_id,\n        parent_id\n    }\n});\n\nexport const expandAll = node_id => ({\n    type: actionTypes.EXPAND_ALL,\n    data: {\n        node_id\n    }\n});\n\nexport const setMindmap = mindmap => ({\n    type: actionTypes.SET_MINDMAP,\n    data: {\n        mindmap\n    }\n});\n"]},"metadata":{},"sourceType":"module"}