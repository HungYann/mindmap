{"ast":null,"code":"import { useContext } from 'react';\nimport { context } from '../context';\nimport { setMindmap } from '../context/reducer/mindmap/actionCreator.js';\nimport { setSelect } from '../context/reducer/nodeStatus/actionCreator.js';\nexport default (() => {\n  const {\n    mindmap: {\n      dispatch: mDispatch\n    },\n    nodeStatus: {\n      dispatch: nDispatch\n    },\n    history: {\n      state: history\n    }\n  } = useContext(context);\n\n  const applySnapshot = snapshot => {\n    if (snapshot) {\n      const {\n        mindmap,\n        cur_node\n      } = snapshot;\n      mDispatch(setMindmap(JSON.parse(mindmap)));\n      nDispatch(setSelect(cur_node));\n    }\n  };\n\n  return {\n    undoHistory: () => {\n      applySnapshot(history.undo[history.undo.length - 1]);\n    },\n    redoHistory: () => {\n      applySnapshot(history.redo[0]);\n    }\n  };\n});","map":{"version":3,"sources":["/Users/liuhongyang/Documents/GitHub/repositories/mindmap/src/customHooks/useHistory.js"],"names":["useContext","context","setMindmap","setSelect","mindmap","dispatch","mDispatch","nodeStatus","nDispatch","history","state","applySnapshot","snapshot","cur_node","JSON","parse","undoHistory","undo","length","redoHistory","redo"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,OAAzB;AACA,SAAQC,OAAR,QAAsB,YAAtB;AACA,SAAQC,UAAR,QAAyB,6CAAzB;AACA,SAAQC,SAAR,QAAwB,gDAAxB;AAEA,gBAAe,MAAM;AACjB,QAAM;AAACC,IAAAA,OAAO,EAAE;AAACC,MAAAA,QAAQ,EAAEC;AAAX,KAAV;AAAiCC,IAAAA,UAAU,EAAE;AAACF,MAAAA,QAAQ,EAAEG;AAAX,KAA7C;AAAoEC,IAAAA,OAAO,EAAE;AAACC,MAAAA,KAAK,EAAED;AAAR;AAA7E,MAAiGT,UAAU,CAACC,OAAD,CAAjH;;AAEA,QAAMU,aAAa,GAAGC,QAAQ,IAAI;AAC9B,QAAIA,QAAJ,EAAc;AACV,YAAM;AAACR,QAAAA,OAAD;AAAUS,QAAAA;AAAV,UAAsBD,QAA5B;AACAN,MAAAA,SAAS,CAACJ,UAAU,CAACY,IAAI,CAACC,KAAL,CAAWX,OAAX,CAAD,CAAX,CAAT;AACAI,MAAAA,SAAS,CAACL,SAAS,CAACU,QAAD,CAAV,CAAT;AACH;AACJ,GAND;;AAQA,SAAO;AACHG,IAAAA,WAAW,EAAE,MAAM;AACfL,MAAAA,aAAa,CAACF,OAAO,CAACQ,IAAR,CAAaR,OAAO,CAACQ,IAAR,CAAaC,MAAb,GAAsB,CAAnC,CAAD,CAAb;AACH,KAHE;AAIHC,IAAAA,WAAW,EAAE,MAAM;AACfR,MAAAA,aAAa,CAACF,OAAO,CAACW,IAAR,CAAa,CAAb,CAAD,CAAb;AACH;AANE,GAAP;AAQH,CAnBD","sourcesContent":["import {useContext} from 'react';\nimport {context} from '../context';\nimport {setMindmap} from '../context/reducer/mindmap/actionCreator.js';\nimport {setSelect} from '../context/reducer/nodeStatus/actionCreator.js';\n\nexport default () => {\n    const {mindmap: {dispatch: mDispatch}, nodeStatus: {dispatch: nDispatch}, history: {state: history}} = useContext(context);\n\n    const applySnapshot = snapshot => {\n        if (snapshot) {\n            const {mindmap, cur_node} = snapshot;\n            mDispatch(setMindmap(JSON.parse(mindmap)));\n            nDispatch(setSelect(cur_node));\n        }\n    };\n\n    return {\n        undoHistory: () => {\n            applySnapshot(history.undo[history.undo.length - 1]);\n        },\n        redoHistory: () => {\n            applySnapshot(history.redo[0]);\n        }\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}