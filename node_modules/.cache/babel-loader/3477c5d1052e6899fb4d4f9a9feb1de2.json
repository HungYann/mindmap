{"ast":null,"code":"import createCache from '@emotion/cache';\nimport { serializeStyles } from '@emotion/serialize';\nimport { insertStyles, getRegisteredStyles } from '@emotion/utils';\n\nfunction insertWithoutScoping(cache, serialized) {\n  if (cache.inserted[serialized.name] === undefined) {\n    return cache.insert('', serialized, cache.sheet, true);\n  }\n}\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar createEmotion = function createEmotion(options) {\n  var cache = createCache(options); // $FlowFixMe\n\n  cache.sheet.speedy = function (value) {\n    if (process.env.NODE_ENV !== 'production' && this.ctr !== 0) {\n      throw new Error('speedy must be changed before any rules are inserted');\n    }\n\n    this.isSpeedy = value;\n  };\n\n  cache.compat = true;\n\n  var css = function css() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered, this !== undefined ? this.mergedProps : undefined);\n    insertStyles(cache, serialized, false);\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var keyframes = function keyframes() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    var animation = \"animation-\" + serialized.name;\n    insertWithoutScoping(cache, {\n      name: serialized.name,\n      styles: \"@keyframes \" + animation + \"{\" + serialized.styles + \"}\"\n    });\n    return animation;\n  };\n\n  var injectGlobal = function injectGlobal() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    insertWithoutScoping(cache, serialized);\n  };\n\n  var cx = function cx() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  return {\n    css: css,\n    cx: cx,\n    injectGlobal: injectGlobal,\n    keyframes: keyframes,\n    hydrate: function hydrate(ids) {\n      ids.forEach(function (key) {\n        cache.inserted[key] = true;\n      });\n    },\n    flush: function flush() {\n      cache.registered = {};\n      cache.inserted = {};\n      cache.sheet.flush();\n    },\n    // $FlowFixMe\n    sheet: cache.sheet,\n    cache: cache,\n    getRegisteredStyles: getRegisteredStyles.bind(null, cache.registered),\n    merge: merge.bind(null, cache.registered, css)\n  };\n};\n\nvar classnames = function classnames(args) {\n  var cls = '';\n\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nexport default createEmotion;","map":{"version":3,"sources":["/Users/liuhongyang/Documents/GitHub/repositories/mindmap/node_modules/create-emotion/dist/create-emotion.browser.esm.js"],"names":["createCache","serializeStyles","insertStyles","getRegisteredStyles","insertWithoutScoping","cache","serialized","inserted","name","undefined","insert","sheet","merge","registered","css","className","registeredStyles","rawClassName","length","createEmotion","options","speedy","value","process","env","NODE_ENV","ctr","Error","isSpeedy","compat","_len","arguments","args","Array","_key","mergedProps","key","keyframes","_len2","_key2","animation","styles","injectGlobal","_len3","_key3","cx","_len4","_key4","classnames","hydrate","ids","forEach","flush","bind","cls","i","arg","toAdd","isArray","k"],"mappings":"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","sourcesContent":["import createCache from '@emotion/cache';\nimport { serializeStyles } from '@emotion/serialize';\nimport { insertStyles, getRegisteredStyles } from '@emotion/utils';\n\nfunction insertWithoutScoping(cache, serialized) {\n  if (cache.inserted[serialized.name] === undefined) {\n    return cache.insert('', serialized, cache.sheet, true);\n  }\n}\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar createEmotion = function createEmotion(options) {\n  var cache = createCache(options); // $FlowFixMe\n\n  cache.sheet.speedy = function (value) {\n    if (process.env.NODE_ENV !== 'production' && this.ctr !== 0) {\n      throw new Error('speedy must be changed before any rules are inserted');\n    }\n\n    this.isSpeedy = value;\n  };\n\n  cache.compat = true;\n\n  var css = function css() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered, this !== undefined ? this.mergedProps : undefined);\n    insertStyles(cache, serialized, false);\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var keyframes = function keyframes() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    var animation = \"animation-\" + serialized.name;\n    insertWithoutScoping(cache, {\n      name: serialized.name,\n      styles: \"@keyframes \" + animation + \"{\" + serialized.styles + \"}\"\n    });\n    return animation;\n  };\n\n  var injectGlobal = function injectGlobal() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    insertWithoutScoping(cache, serialized);\n  };\n\n  var cx = function cx() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  return {\n    css: css,\n    cx: cx,\n    injectGlobal: injectGlobal,\n    keyframes: keyframes,\n    hydrate: function hydrate(ids) {\n      ids.forEach(function (key) {\n        cache.inserted[key] = true;\n      });\n    },\n    flush: function flush() {\n      cache.registered = {};\n      cache.inserted = {};\n      cache.sheet.flush();\n    },\n    // $FlowFixMe\n    sheet: cache.sheet,\n    cache: cache,\n    getRegisteredStyles: getRegisteredStyles.bind(null, cache.registered),\n    merge: merge.bind(null, cache.registered, css)\n  };\n};\n\nvar classnames = function classnames(args) {\n  var cls = '';\n\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nexport default createEmotion;\n"]},"metadata":{},"sourceType":"module"}