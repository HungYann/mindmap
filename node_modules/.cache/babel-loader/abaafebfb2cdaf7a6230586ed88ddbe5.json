{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/liuhongyang/Documents/GitHub/repositories/mindmap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\nposition: absolute;\\ntop: 0;\\nbottom: 0;\\nleft: 0;\\nright: 0;\\nwidth: fit-content;\\nmin-width: 1em;\\nmax-width: 10em;\\nheight: fit-content;\\nmargin: auto;\\npadding: 10px;\\ncolor: #333333;\\nbackground-color: #ffffff;\\nbox-shadow: 0 0 20px #aaaaaa;\\nborder-radius: 5px;\\noutline: none;\\nz-index: 3;\\nuser-select: text;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useEffect,useRef}from'react';import{css}from'emotion';import useMindmap from'../../../customHooks/useMindmap';import{handlePropagation}from'../../../methods/assistFunctions';var InputDiv=function InputDiv(_ref){var node_id=_ref.node_id,children=_ref.children;var self=useRef();var _useMindmap=useMindmap(),changeText=_useMindmap.changeText,selectNode=_useMindmap.selectNode;var handleKeydown=function handleKeydown(event){switch(event.key.toUpperCase()){case'ESCAPE':self.current.textContent=children;case'ENTER':self.current.blur();break;default:break;}};var handleBlur=function handleBlur(){changeText(node_id,self.current.textContent);selectNode(node_id);};useEffect(function(){self.current.focus();var selection=document.getSelection();selection.selectAllChildren(self.current);},[]);return/*#__PURE__*/React.createElement(\"div\",{className:wrapper,ref:self,contentEditable:\"true\",suppressContentEditableWarning:\"true\",onClick:handlePropagation,onKeyDown:handleKeydown,onBlur:handleBlur},children);};export default InputDiv;// CSS\nvar wrapper=css(_templateObject());","map":{"version":3,"sources":["/Users/liuhongyang/Documents/GitHub/repositories/mindmap/src/components/Node/subComponents/InputDiv.js"],"names":["React","useEffect","useRef","css","useMindmap","handlePropagation","InputDiv","node_id","children","self","changeText","selectNode","handleKeydown","event","key","toUpperCase","current","textContent","blur","handleBlur","focus","selection","document","getSelection","selectAllChildren","wrapper"],"mappings":"soBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,MAA1B,KAAuC,OAAvC,CACA,OAAQC,GAAR,KAAkB,SAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,iCAAvB,CACA,OAAQC,iBAAR,KAAgC,kCAAhC,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAyB,IAAvBC,CAAAA,OAAuB,MAAvBA,OAAuB,CAAdC,QAAc,MAAdA,QAAc,CACtC,GAAMC,CAAAA,IAAI,CAAGP,MAAM,EAAnB,CADsC,gBAELE,UAAU,EAFL,CAE/BM,UAF+B,aAE/BA,UAF+B,CAEnBC,UAFmB,aAEnBA,UAFmB,CAItC,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,KAAK,CAAI,CAC3B,OAAQA,KAAK,CAACC,GAAN,CAAUC,WAAV,EAAR,EACI,IAAK,QAAL,CACIN,IAAI,CAACO,OAAL,CAAaC,WAAb,CAA2BT,QAA3B,CACJ,IAAK,OAAL,CACIC,IAAI,CAACO,OAAL,CAAaE,IAAb,GACA,MACJ,QACI,MAPR,CASH,CAVD,CAYA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrBT,UAAU,CAACH,OAAD,CAAUE,IAAI,CAACO,OAAL,CAAaC,WAAvB,CAAV,CACAN,UAAU,CAACJ,OAAD,CAAV,CACH,CAHD,CAKAN,SAAS,CAAC,UAAM,CACZQ,IAAI,CAACO,OAAL,CAAaI,KAAb,GACA,GAAMC,CAAAA,SAAS,CAAGC,QAAQ,CAACC,YAAT,EAAlB,CACAF,SAAS,CAACG,iBAAV,CAA4Bf,IAAI,CAACO,OAAjC,EACH,CAJQ,CAIN,EAJM,CAAT,CAMA,mBAAQ,2BAAK,SAAS,CAAES,OAAhB,CAAyB,GAAG,CAAEhB,IAA9B,CAAoC,eAAe,CAAC,MAApD,CAA2D,8BAA8B,CAAC,MAA1F,CACK,OAAO,CAAEJ,iBADd,CACiC,SAAS,CAAEO,aAD5C,CAC2D,MAAM,CAAEO,UADnE,EACgFX,QADhF,CAAR,CAEH,CA7BD,CA+BA,cAAeF,CAAAA,QAAf,CAEA;AACA,GAAMmB,CAAAA,OAAO,CAAGtB,GAAH,mBAAb","sourcesContent":["import React, {useEffect, useRef} from 'react';\nimport {css} from 'emotion';\nimport useMindmap from '../../../customHooks/useMindmap';\nimport {handlePropagation} from '../../../methods/assistFunctions';\n\nconst InputDiv = ({node_id, children}) => {\n    const self = useRef();\n    const {changeText, selectNode} = useMindmap();\n\n    const handleKeydown = event => {\n        switch (event.key.toUpperCase()) {\n            case 'ESCAPE':\n                self.current.textContent = children;\n            case 'ENTER':\n                self.current.blur();\n                break;\n            default:\n                break;\n        }\n    };\n\n    const handleBlur = () => {\n        changeText(node_id, self.current.textContent);\n        selectNode(node_id);\n    };\n\n    useEffect(() => {\n        self.current.focus();\n        const selection = document.getSelection();\n        selection.selectAllChildren(self.current);\n    }, []);\n\n    return (<div className={wrapper} ref={self} contentEditable=\"true\" suppressContentEditableWarning=\"true\"\n                 onClick={handlePropagation} onKeyDown={handleKeydown} onBlur={handleBlur}>{children}</div>);\n};\n\nexport default InputDiv;\n\n// CSS\nconst wrapper = css`\nposition: absolute;\ntop: 0;\nbottom: 0;\nleft: 0;\nright: 0;\nwidth: fit-content;\nmin-width: 1em;\nmax-width: 10em;\nheight: fit-content;\nmargin: auto;\npadding: 10px;\ncolor: #333333;\nbackground-color: #ffffff;\nbox-shadow: 0 0 20px #aaaaaa;\nborder-radius: 5px;\noutline: none;\nz-index: 3;\nuser-select: text;\n`;"]},"metadata":{},"sourceType":"module"}