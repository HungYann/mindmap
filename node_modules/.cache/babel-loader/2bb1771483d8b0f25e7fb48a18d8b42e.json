{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/liuhongyang/Documents/GitHub/repositories/mindmap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"/Users/liuhongyang/Documents/GitHub/repositories/mindmap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\nposition: absolute;\\ntop:0;\\nleft:0;\\nz-index: -1;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useEffect,useRef,useContext}from'react';import{css}from'emotion';import useMindmap from'../../customHooks/useMindmap';import useTheme from'../../customHooks/useTheme';import getDragEvents from'../../methods/getDragEvents';import{context}from'../../context';import*as refer from'../../statics/refer';var DragCanvas=function DragCanvas(_ref){var parent_ref=_ref.parent_ref,container_ref=_ref.container_ref,mindmap=_ref.mindmap;var self=useRef();var _useState=useState(0),_useState2=_slicedToArray(_useState,2),flag=_useState2[0],setFlag=_useState2[1];var _useTheme=useTheme(),theme=_useTheme.theme;var mindmapHook=useMindmap();var _useContext=useContext(context),gState=_useContext.global.state;var zoom=gState.zoom,x=gState.x,y=gState.y;var handleWindowResize=function handleWindowResize(){setFlag(Date.now());};useEffect(function(){window.addEventListener('resize',handleWindowResize);return function(){window.removeEventListener('resize',handleWindowResize);};},[]);useEffect(function(){var handleDrag=getDragEvents(mindmap,self.current,container_ref.current,theme,mindmapHook,zoom,{x:x,y:y});handleDrag.forEach(function(event){return document.querySelector(\"#\".concat(refer.MINDMAP_ID)).addEventListener(event.type,event.listener);});return function(){handleDrag.forEach(function(event){return document.querySelector(\"#\".concat(refer.MINDMAP_ID)).removeEventListener(event.type,event.listener);});};},[mindmap,theme,zoom,x,y]);useEffect(function(){var dom=self.current;dom.width=parent_ref.current.offsetWidth;dom.height=parent_ref.current.offsetHeight;},[mindmap,flag,gState.zoom]);return/*#__PURE__*/React.createElement(\"canvas\",{ref:self,className:wrapper});};export default DragCanvas;// CSS\nvar wrapper=css(_templateObject());","map":{"version":3,"sources":["/Users/liuhongyang/Documents/GitHub/repositories/mindmap/src/components/DragCanvas/index.js"],"names":["React","useState","useEffect","useRef","useContext","css","useMindmap","useTheme","getDragEvents","context","refer","DragCanvas","parent_ref","container_ref","mindmap","self","flag","setFlag","theme","mindmapHook","gState","global","state","zoom","x","y","handleWindowResize","Date","now","window","addEventListener","removeEventListener","handleDrag","current","forEach","event","document","querySelector","MINDMAP_ID","type","listener","dom","width","offsetWidth","height","offsetHeight","wrapper"],"mappings":"2iBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,MAArC,CAA6CC,UAA7C,KAA+D,OAA/D,CACA,OAASC,GAAT,KAAoB,SAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,OAASC,OAAT,KAAwB,eAAxB,CACA,MAAO,GAAKC,CAAAA,KAAZ,KAAuB,qBAAvB,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAA4C,IAAzCC,CAAAA,UAAyC,MAAzCA,UAAyC,CAA7BC,aAA6B,MAA7BA,aAA6B,CAAdC,OAAc,MAAdA,OAAc,CAC3D,GAAMC,CAAAA,IAAI,CAAGZ,MAAM,EAAnB,CAD2D,cAEnCF,QAAQ,CAAC,CAAD,CAF2B,wCAEpDe,IAFoD,eAE9CC,OAF8C,6BAIzCV,QAAQ,EAJiC,CAInDW,KAJmD,WAInDA,KAJmD,CAM3D,GAAMC,CAAAA,WAAW,CAAGb,UAAU,EAA9B,CAN2D,gBAQrBF,UAAU,CAACK,OAAD,CARW,CAQlCW,MARkC,aAQnDC,MARmD,CAQzCC,KARyC,IASpDC,CAAAA,IAToD,CAS1CH,MAT0C,CASpDG,IAToD,CAS/CC,CAT+C,CAS1CJ,MAT0C,CAS/CI,CAT+C,CAS7CC,CAT6C,CAS1CL,MAT0C,CAS7CK,CAT6C,CAW3D,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC7BT,OAAO,CAACU,IAAI,CAACC,GAAL,EAAD,CAAP,CACH,CAFD,CAIA1B,SAAS,CAAC,UAAM,CACZ2B,MAAM,CAACC,gBAAP,CAAwB,QAAxB,CAAkCJ,kBAAlC,EACA,MAAO,WAAM,CACTG,MAAM,CAACE,mBAAP,CAA2B,QAA3B,CAAqCL,kBAArC,EACH,CAFD,CAGH,CALQ,CAKN,EALM,CAAT,CAOAxB,SAAS,CAAC,UAAM,CACZ,GAAM8B,CAAAA,UAAU,CAAGxB,aAAa,CAACM,OAAD,CAAUC,IAAI,CAACkB,OAAf,CAAwBpB,aAAa,CAACoB,OAAtC,CAA+Cf,KAA/C,CAAsDC,WAAtD,CAAkEI,IAAlE,CAAuE,CAACC,CAAC,CAADA,CAAD,CAAGC,CAAC,CAADA,CAAH,CAAvE,CAAhC,CACAO,UAAU,CAACE,OAAX,CAAmB,SAAAC,KAAK,QAAIC,CAAAA,QAAQ,CAACC,aAAT,YAA2B3B,KAAK,CAAC4B,UAAjC,GAA+CR,gBAA/C,CAAgEK,KAAK,CAACI,IAAtE,CAA4EJ,KAAK,CAACK,QAAlF,CAAJ,EAAxB,EACA,MAAO,WAAM,CACTR,UAAU,CAACE,OAAX,CAAmB,SAAAC,KAAK,QAAIC,CAAAA,QAAQ,CAACC,aAAT,YAA2B3B,KAAK,CAAC4B,UAAjC,GAA+CP,mBAA/C,CAAmEI,KAAK,CAACI,IAAzE,CAA+EJ,KAAK,CAACK,QAArF,CAAJ,EAAxB,EACH,CAFD,CAGH,CANQ,CAMN,CAAC1B,OAAD,CAAUI,KAAV,CAAgBK,IAAhB,CAAqBC,CAArB,CAAuBC,CAAvB,CANM,CAAT,CAQAvB,SAAS,CAAC,UAAM,CACZ,GAAMuC,CAAAA,GAAG,CAAG1B,IAAI,CAACkB,OAAjB,CACAQ,GAAG,CAACC,KAAJ,CAAY9B,UAAU,CAACqB,OAAX,CAAmBU,WAA/B,CACAF,GAAG,CAACG,MAAJ,CAAahC,UAAU,CAACqB,OAAX,CAAmBY,YAAhC,CACH,CAJQ,CAIN,CAAC/B,OAAD,CAAUE,IAAV,CAAgBI,MAAM,CAACG,IAAvB,CAJM,CAAT,CAMA,mBAAQ,8BAAQ,GAAG,CAAER,IAAb,CAAmB,SAAS,CAAE+B,OAA9B,EAAR,CACH,CArCD,CAuCA,cAAenC,CAAAA,UAAf,CAEA;AACA,GAAMmC,CAAAA,OAAO,CAAGzC,GAAH,mBAAb","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { css } from 'emotion';\nimport useMindmap from '../../customHooks/useMindmap';\nimport useTheme from '../../customHooks/useTheme';\nimport getDragEvents from '../../methods/getDragEvents';\nimport { context } from '../../context'\nimport * as refer from '../../statics/refer';\n\nconst DragCanvas = ({ parent_ref, container_ref, mindmap }) => {\n    const self = useRef();\n    const [flag, setFlag] = useState(0);\n\n    const { theme } = useTheme();\n\n    const mindmapHook = useMindmap();\n\n    const { global: { state: gState } } = useContext(context);\n    const {zoom,x,y}=gState\n\n    const handleWindowResize = () => {\n        setFlag(Date.now());\n    };\n\n    useEffect(() => {\n        window.addEventListener('resize', handleWindowResize);\n        return () => {\n            window.removeEventListener('resize', handleWindowResize);\n        }\n    }, []);\n\n    useEffect(() => {\n        const handleDrag = getDragEvents(mindmap, self.current, container_ref.current, theme, mindmapHook,zoom,{x,y});\n        handleDrag.forEach(event => document.querySelector(`#${refer.MINDMAP_ID}`).addEventListener(event.type, event.listener));\n        return () => {\n            handleDrag.forEach(event => document.querySelector(`#${refer.MINDMAP_ID}`).removeEventListener(event.type, event.listener));\n        }\n    }, [mindmap, theme,zoom,x,y]);\n\n    useEffect(() => {\n        const dom = self.current;\n        dom.width = parent_ref.current.offsetWidth;\n        dom.height = parent_ref.current.offsetHeight;\n    }, [mindmap, flag, gState.zoom]);\n\n    return (<canvas ref={self} className={wrapper} />);\n};\n\nexport default DragCanvas;\n\n// CSS\nconst wrapper = css`\nposition: absolute;\ntop:0;\nleft:0;\nz-index: -1;\n`;"]},"metadata":{},"sourceType":"module"}