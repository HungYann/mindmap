{"ast":null,"code":"/**\n * marked - a markdown parser\n * Copyright (c) 2011-2018, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n;\n\n(function (root) {\n  'use strict';\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^\\n+/,\n    code: /^( {4}[^\\n]+\\n*)+/,\n    fences: /^ {0,3}(`{3,}|~{3,})([^`~\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6}) +([^\\n]*?)(?: +#+)? *(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    nptable: noop,\n    table: noop,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\n  block.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\n  block.item = edit(block.item, 'gm').replace(/bull/g, block.bullet).getRegex();\n  block.list = edit(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\n  block.html = edit(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} +').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}|~{3,})[^`\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge({}, block.normal, {\n    nptable: /^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,\n    table: /^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/\n  });\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = merge({}, block.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n    fences: noop,\n    // fences not supported\n    paragraph: edit(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Block Lexer\n   */\n\n  function Lexer(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || marked.defaults;\n    this.rules = block.normal;\n\n    if (this.options.pedantic) {\n      this.rules = block.pedantic;\n    } else if (this.options.gfm) {\n      this.rules = block.gfm;\n    }\n  }\n  /**\n   * Expose Block Rules\n   */\n\n\n  Lexer.rules = block;\n  /**\n   * Static Lex Method\n   */\n\n  Lexer.lex = function (src, options) {\n    var lexer = new Lexer(options);\n    return lexer.lex(src);\n  };\n  /**\n   * Preprocessing\n   */\n\n\n  Lexer.prototype.lex = function (src) {\n    src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ').replace(/\\u00a0/g, ' ').replace(/\\u2424/g, '\\n');\n    return this.token(src, true);\n  };\n  /**\n   * Lexing\n   */\n\n\n  Lexer.prototype.token = function (src, top) {\n    src = src.replace(/^ +$/gm, '');\n    var next, loose, cap, bull, b, item, listStart, listItems, t, space, i, tag, l, isordered, istask, ischecked;\n\n    while (src) {\n      // newline\n      if (cap = this.rules.newline.exec(src)) {\n        src = src.substring(cap[0].length);\n\n        if (cap[0].length > 1) {\n          this.tokens.push({\n            type: 'space'\n          });\n        }\n      } // code\n\n\n      if (cap = this.rules.code.exec(src)) {\n        var lastToken = this.tokens[this.tokens.length - 1];\n        src = src.substring(cap[0].length); // An indented code block cannot interrupt a paragraph.\n\n        if (lastToken && lastToken.type === 'paragraph') {\n          lastToken.text += '\\n' + cap[0].trimRight();\n        } else {\n          cap = cap[0].replace(/^ {4}/gm, '');\n          this.tokens.push({\n            type: 'code',\n            codeBlockStyle: 'indented',\n            text: !this.options.pedantic ? rtrim(cap, '\\n') : cap\n          });\n        }\n\n        continue;\n      } // fences\n\n\n      if (cap = this.rules.fences.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'code',\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: cap[3] || ''\n        });\n        continue;\n      } // heading\n\n\n      if (cap = this.rules.heading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[1].length,\n          text: cap[2]\n        });\n        continue;\n      } // table no leading pipe (gfm)\n\n\n      if (cap = this.rules.nptable.exec(src)) {\n        item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          src = src.substring(cap[0].length);\n\n          for (i = 0; i < item.align.length; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          for (i = 0; i < item.cells.length; i++) {\n            item.cells[i] = splitCells(item.cells[i], item.header.length);\n          }\n\n          this.tokens.push(item);\n          continue;\n        }\n      } // hr\n\n\n      if (cap = this.rules.hr.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'hr'\n        });\n        continue;\n      } // blockquote\n\n\n      if (cap = this.rules.blockquote.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'blockquote_start'\n        });\n        cap = cap[0].replace(/^ *> ?/gm, ''); // Pass `top` to keep the current\n        // \"toplevel\" state. This is exactly\n        // how markdown.pl works.\n\n        this.token(cap, top);\n        this.tokens.push({\n          type: 'blockquote_end'\n        });\n        continue;\n      } // list\n\n\n      if (cap = this.rules.list.exec(src)) {\n        src = src.substring(cap[0].length);\n        bull = cap[2];\n        isordered = bull.length > 1;\n        listStart = {\n          type: 'list_start',\n          ordered: isordered,\n          start: isordered ? +bull : '',\n          loose: false\n        };\n        this.tokens.push(listStart); // Get each top-level item.\n\n        cap = cap[0].match(this.rules.item);\n        listItems = [];\n        next = false;\n        l = cap.length;\n        i = 0;\n\n        for (; i < l; i++) {\n          item = cap[i]; // Remove the list item's bullet\n          // so it is seen as the next token.\n\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+\\.) */, ''); // Outdent whatever the\n          // list item contains. Hacky.\n\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n          } // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n\n\n          if (i !== l - 1) {\n            b = block.bullet.exec(cap[i + 1])[0];\n\n            if (bull.length > 1 ? b.length === 1 : b.length > 1 || this.options.smartLists && b !== bull) {\n              src = cap.slice(i + 1).join('\\n') + src;\n              i = l - 1;\n            }\n          } // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n\n\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n\n          if (i !== l - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n            if (!loose) loose = next;\n          }\n\n          if (loose) {\n            listStart.loose = true;\n          } // Check for task list items\n\n\n          istask = /^\\[[ xX]\\] /.test(item);\n          ischecked = undefined;\n\n          if (istask) {\n            ischecked = item[1] !== ' ';\n            item = item.replace(/^\\[[ xX]\\] +/, '');\n          }\n\n          t = {\n            type: 'list_item_start',\n            task: istask,\n            checked: ischecked,\n            loose: loose\n          };\n          listItems.push(t);\n          this.tokens.push(t); // Recurse.\n\n          this.token(item, false);\n          this.tokens.push({\n            type: 'list_item_end'\n          });\n        }\n\n        if (listStart.loose) {\n          l = listItems.length;\n          i = 0;\n\n          for (; i < l; i++) {\n            listItems[i].loose = true;\n          }\n        }\n\n        this.tokens.push({\n          type: 'list_end'\n        });\n        continue;\n      } // html\n\n\n      if (cap = this.rules.html.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: this.options.sanitize ? 'paragraph' : 'html',\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0]\n        });\n        continue;\n      } // def\n\n\n      if (top && (cap = this.rules.def.exec(src))) {\n        src = src.substring(cap[0].length);\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n\n        if (!this.tokens.links[tag]) {\n          this.tokens.links[tag] = {\n            href: cap[2],\n            title: cap[3]\n          };\n        }\n\n        continue;\n      } // table (gfm)\n\n\n      if (cap = this.rules.table.exec(src)) {\n        item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          src = src.substring(cap[0].length);\n\n          for (i = 0; i < item.align.length; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          for (i = 0; i < item.cells.length; i++) {\n            item.cells[i] = splitCells(item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''), item.header.length);\n          }\n\n          this.tokens.push(item);\n          continue;\n        }\n      } // lheading\n\n\n      if (cap = this.rules.lheading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1]\n        });\n        continue;\n      } // top-level paragraph\n\n\n      if (top && (cap = this.rules.paragraph.exec(src))) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'paragraph',\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n        });\n        continue;\n      } // text\n\n\n      if (cap = this.rules.text.exec(src)) {\n        // Top-level should never reach here.\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'text',\n          text: cap[0]\n        });\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return this.tokens;\n  };\n  /**\n   * Inline-Level Grammar\n   */\n\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noop,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n    strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n    em: /^_([^\\s_])_(?!_)|^\\*([^\\s*<\\[])\\*(?!\\*)|^_([^\\s<][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_<][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s<\"][\\s\\S]*?[^\\s\\*])\\*(?!\\*|[^\\spunctuation])|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noop,\n    text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/\n  }; // list of punctuation marks from common mark spec\n  // without ` and ] to workaround Rule 17 (inline code blocks/links)\n\n  inline._punctuation = '!\"#$%&\\'()*+,\\\\-./:;<=>?@\\\\[^_{|}~';\n  inline.em = edit(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit(inline.tag).replace('comment', block._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[[^\\[\\]]*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit(inline.reflink).replace('label', inline._label).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge({}, inline.normal, {\n    strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge({}, inline.normal, {\n    escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n    text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n  });\n  inline.gfm.url = edit(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge({}, inline.gfm, {\n    br: edit(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n  /**\n   * Inline Lexer & Compiler\n   */\n\n  function InlineLexer(links, options) {\n    this.options = options || marked.defaults;\n    this.links = links;\n    this.rules = inline.normal;\n    this.renderer = this.options.renderer || new Renderer();\n    this.renderer.options = this.options;\n\n    if (!this.links) {\n      throw new Error('Tokens array requires a `links` property.');\n    }\n\n    if (this.options.pedantic) {\n      this.rules = inline.pedantic;\n    } else if (this.options.gfm) {\n      if (this.options.breaks) {\n        this.rules = inline.breaks;\n      } else {\n        this.rules = inline.gfm;\n      }\n    }\n  }\n  /**\n   * Expose Inline Rules\n   */\n\n\n  InlineLexer.rules = inline;\n  /**\n   * Static Lexing/Compiling Method\n   */\n\n  InlineLexer.output = function (src, links, options) {\n    var inline = new InlineLexer(links, options);\n    return inline.output(src);\n  };\n  /**\n   * Lexing/Compiling\n   */\n\n\n  InlineLexer.prototype.output = function (src) {\n    var out = '',\n        link,\n        text,\n        href,\n        title,\n        cap,\n        prevCapZero;\n\n    while (src) {\n      // escape\n      if (cap = this.rules.escape.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += escape(cap[1]);\n        continue;\n      } // tag\n\n\n      if (cap = this.rules.tag.exec(src)) {\n        if (!this.inLink && /^<a /i.test(cap[0])) {\n          this.inLink = true;\n        } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.inLink = false;\n        }\n\n        if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.inRawBlock = true;\n        } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.inRawBlock = false;\n        }\n\n        src = src.substring(cap[0].length);\n        out += this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n        continue;\n      } // link\n\n\n      if (cap = this.rules.link.exec(src)) {\n        var lastParenIndex = findClosingBracket(cap[2], '()');\n\n        if (lastParenIndex > -1) {\n          var linkLen = 4 + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n\n        src = src.substring(cap[0].length);\n        this.inLink = true;\n        href = cap[2];\n\n        if (this.options.pedantic) {\n          link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          } else {\n            title = '';\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n        out += this.outputLink(cap, {\n          href: InlineLexer.escapes(href),\n          title: InlineLexer.escapes(title)\n        });\n        this.inLink = false;\n        continue;\n      } // reflink, nolink\n\n\n      if ((cap = this.rules.reflink.exec(src)) || (cap = this.rules.nolink.exec(src))) {\n        src = src.substring(cap[0].length);\n        link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = this.links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          out += cap[0].charAt(0);\n          src = cap[0].substring(1) + src;\n          continue;\n        }\n\n        this.inLink = true;\n        out += this.outputLink(cap, link);\n        this.inLink = false;\n        continue;\n      } // strong\n\n\n      if (cap = this.rules.strong.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n        continue;\n      } // em\n\n\n      if (cap = this.rules.em.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n        continue;\n      } // code\n\n\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.codespan(escape(cap[2].trim(), true));\n        continue;\n      } // br\n\n\n      if (cap = this.rules.br.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.br();\n        continue;\n      } // del (gfm)\n\n\n      if (cap = this.rules.del.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.del(this.output(cap[1]));\n        continue;\n      } // autolink\n\n\n      if (cap = this.rules.autolink.exec(src)) {\n        src = src.substring(cap[0].length);\n\n        if (cap[2] === '@') {\n          text = escape(this.mangle(cap[1]));\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n\n        out += this.renderer.link(href, null, text);\n        continue;\n      } // url (gfm)\n\n\n      if (!this.inLink && (cap = this.rules.url.exec(src))) {\n        if (cap[2] === '@') {\n          text = escape(cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        src = src.substring(cap[0].length);\n        out += this.renderer.link(href, null, text);\n        continue;\n      } // text\n\n\n      if (cap = this.rules.text.exec(src)) {\n        src = src.substring(cap[0].length);\n\n        if (this.inRawBlock) {\n          out += this.renderer.text(this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0]);\n        } else {\n          out += this.renderer.text(escape(this.smartypants(cap[0])));\n        }\n\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return out;\n  };\n\n  InlineLexer.escapes = function (text) {\n    return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n  };\n  /**\n   * Compile Link\n   */\n\n\n  InlineLexer.prototype.outputLink = function (cap, link) {\n    var href = link.href,\n        title = link.title ? escape(link.title) : null;\n    return cap[0].charAt(0) !== '!' ? this.renderer.link(href, title, this.output(cap[1])) : this.renderer.image(href, title, escape(cap[1]));\n  };\n  /**\n   * Smartypants Transformations\n   */\n\n\n  InlineLexer.prototype.smartypants = function (text) {\n    if (!this.options.smartypants) return text;\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  };\n  /**\n   * Mangle Links\n   */\n\n\n  InlineLexer.prototype.mangle = function (text) {\n    if (!this.options.mangle) return text;\n    var out = '',\n        l = text.length,\n        i = 0,\n        ch;\n\n    for (; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  };\n  /**\n   * Renderer\n   */\n\n\n  function Renderer(options) {\n    this.options = options || marked.defaults;\n  }\n\n  Renderer.prototype.code = function (code, infostring, escaped) {\n    var lang = (infostring || '').match(/\\S*/)[0];\n\n    if (this.options.highlight) {\n      var out = this.options.highlight(code, lang);\n\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    if (!lang) {\n      return '<pre><code>' + (escaped ? code : escape(code, true)) + '</code></pre>';\n    }\n\n    return '<pre><code class=\"' + this.options.langPrefix + escape(lang, true) + '\">' + (escaped ? code : escape(code, true)) + '</code></pre>\\n';\n  };\n\n  Renderer.prototype.blockquote = function (quote) {\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\n  };\n\n  Renderer.prototype.html = function (html) {\n    return html;\n  };\n\n  Renderer.prototype.heading = function (text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n    } // ignore IDs\n\n\n    return '<h' + level + '>' + text + '</h' + level + '>\\n';\n  };\n\n  Renderer.prototype.hr = function () {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  };\n\n  Renderer.prototype.list = function (body, ordered, start) {\n    var type = ordered ? 'ol' : 'ul',\n        startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  };\n\n  Renderer.prototype.listitem = function (text) {\n    return '<li>' + text + '</li>\\n';\n  };\n\n  Renderer.prototype.checkbox = function (checked) {\n    return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n  };\n\n  Renderer.prototype.paragraph = function (text) {\n    return '<p>' + text + '</p>\\n';\n  };\n\n  Renderer.prototype.table = function (header, body) {\n    if (body) body = '<tbody>' + body + '</tbody>';\n    return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n  };\n\n  Renderer.prototype.tablerow = function (content) {\n    return '<tr>\\n' + content + '</tr>\\n';\n  };\n\n  Renderer.prototype.tablecell = function (content, flags) {\n    var type = flags.header ? 'th' : 'td';\n    var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n    return tag + content + '</' + type + '>\\n';\n  }; // span level renderer\n\n\n  Renderer.prototype.strong = function (text) {\n    return '<strong>' + text + '</strong>';\n  };\n\n  Renderer.prototype.em = function (text) {\n    return '<em>' + text + '</em>';\n  };\n\n  Renderer.prototype.codespan = function (text) {\n    return '<code>' + text + '</code>';\n  };\n\n  Renderer.prototype.br = function () {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  };\n\n  Renderer.prototype.del = function (text) {\n    return '<del>' + text + '</del>';\n  };\n\n  Renderer.prototype.link = function (href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n    if (href === null) {\n      return text;\n    }\n\n    var out = '<a href=\"' + escape(href) + '\"';\n\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n\n    out += '>' + text + '</a>';\n    return out;\n  };\n\n  Renderer.prototype.image = function (href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n    if (href === null) {\n      return text;\n    }\n\n    var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  };\n\n  Renderer.prototype.text = function (text) {\n    return text;\n  };\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n\n\n  function TextRenderer() {} // no need for block level renderers\n\n\n  TextRenderer.prototype.strong = TextRenderer.prototype.em = TextRenderer.prototype.codespan = TextRenderer.prototype.del = TextRenderer.prototype.text = function (text) {\n    return text;\n  };\n\n  TextRenderer.prototype.link = TextRenderer.prototype.image = function (href, title, text) {\n    return '' + text;\n  };\n\n  TextRenderer.prototype.br = function () {\n    return '';\n  };\n  /**\n   * Parsing & Compiling\n   */\n\n\n  function Parser(options) {\n    this.tokens = [];\n    this.token = null;\n    this.options = options || marked.defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.slugger = new Slugger();\n  }\n  /**\n   * Static Parse Method\n   */\n\n\n  Parser.parse = function (src, options) {\n    var parser = new Parser(options);\n    return parser.parse(src);\n  };\n  /**\n   * Parse Loop\n   */\n\n\n  Parser.prototype.parse = function (src) {\n    this.inline = new InlineLexer(src.links, this.options); // use an InlineLexer with a TextRenderer to extract pure text\n\n    this.inlineText = new InlineLexer(src.links, merge({}, this.options, {\n      renderer: new TextRenderer()\n    }));\n    this.tokens = src.reverse();\n    var out = '';\n\n    while (this.next()) {\n      out += this.tok();\n    }\n\n    return out;\n  };\n  /**\n   * Next Token\n   */\n\n\n  Parser.prototype.next = function () {\n    this.token = this.tokens.pop();\n    return this.token;\n  };\n  /**\n   * Preview Next Token\n   */\n\n\n  Parser.prototype.peek = function () {\n    return this.tokens[this.tokens.length - 1] || 0;\n  };\n  /**\n   * Parse Text Tokens\n   */\n\n\n  Parser.prototype.parseText = function () {\n    var body = this.token.text;\n\n    while (this.peek().type === 'text') {\n      body += '\\n' + this.next().text;\n    }\n\n    return this.inline.output(body);\n  };\n  /**\n   * Parse Current Token\n   */\n\n\n  Parser.prototype.tok = function () {\n    switch (this.token.type) {\n      case 'space':\n        {\n          return '';\n        }\n\n      case 'hr':\n        {\n          return this.renderer.hr();\n        }\n\n      case 'heading':\n        {\n          return this.renderer.heading(this.inline.output(this.token.text), this.token.depth, unescape(this.inlineText.output(this.token.text)), this.slugger);\n        }\n\n      case 'code':\n        {\n          return this.renderer.code(this.token.text, this.token.lang, this.token.escaped);\n        }\n\n      case 'table':\n        {\n          var header = '',\n              body = '',\n              i,\n              row,\n              cell,\n              j; // header\n\n          cell = '';\n\n          for (i = 0; i < this.token.header.length; i++) {\n            cell += this.renderer.tablecell(this.inline.output(this.token.header[i]), {\n              header: true,\n              align: this.token.align[i]\n            });\n          }\n\n          header += this.renderer.tablerow(cell);\n\n          for (i = 0; i < this.token.cells.length; i++) {\n            row = this.token.cells[i];\n            cell = '';\n\n            for (j = 0; j < row.length; j++) {\n              cell += this.renderer.tablecell(this.inline.output(row[j]), {\n                header: false,\n                align: this.token.align[j]\n              });\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n\n          return this.renderer.table(header, body);\n        }\n\n      case 'blockquote_start':\n        {\n          body = '';\n\n          while (this.next().type !== 'blockquote_end') {\n            body += this.tok();\n          }\n\n          return this.renderer.blockquote(body);\n        }\n\n      case 'list_start':\n        {\n          body = '';\n          var ordered = this.token.ordered,\n              start = this.token.start;\n\n          while (this.next().type !== 'list_end') {\n            body += this.tok();\n          }\n\n          return this.renderer.list(body, ordered, start);\n        }\n\n      case 'list_item_start':\n        {\n          body = '';\n          var loose = this.token.loose;\n          var checked = this.token.checked;\n          var task = this.token.task;\n\n          if (this.token.task) {\n            body += this.renderer.checkbox(checked);\n          }\n\n          while (this.next().type !== 'list_item_end') {\n            body += !loose && this.token.type === 'text' ? this.parseText() : this.tok();\n          }\n\n          return this.renderer.listitem(body, task, checked);\n        }\n\n      case 'html':\n        {\n          // TODO parse inline content if parameter markdown=1\n          return this.renderer.html(this.token.text);\n        }\n\n      case 'paragraph':\n        {\n          return this.renderer.paragraph(this.inline.output(this.token.text));\n        }\n\n      case 'text':\n        {\n          return this.renderer.paragraph(this.parseText());\n        }\n\n      default:\n        {\n          var errMsg = 'Token with \"' + this.token.type + '\" type was not found.';\n\n          if (this.options.silent) {\n            console.log(errMsg);\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n    }\n  };\n  /**\n   * Slugger generates header id\n   */\n\n\n  function Slugger() {\n    this.seen = {};\n  }\n  /**\n   * Convert string to unique id\n   */\n\n\n  Slugger.prototype.slug = function (value) {\n    var slug = value.toLowerCase().trim().replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n\n    if (this.seen.hasOwnProperty(slug)) {\n      var originalSlug = slug;\n\n      do {\n        this.seen[originalSlug]++;\n        slug = originalSlug + '-' + this.seen[originalSlug];\n      } while (this.seen.hasOwnProperty(slug));\n    }\n\n    this.seen[slug] = 0;\n    return slug;\n  };\n  /**\n   * Helpers\n   */\n\n\n  function escape(html, encode) {\n    if (encode) {\n      if (escape.escapeTest.test(html)) {\n        return html.replace(escape.escapeReplace, function (ch) {\n          return escape.replacements[ch];\n        });\n      }\n    } else {\n      if (escape.escapeTestNoEncode.test(html)) {\n        return html.replace(escape.escapeReplaceNoEncode, function (ch) {\n          return escape.replacements[ch];\n        });\n      }\n    }\n\n    return html;\n  }\n\n  escape.escapeTest = /[&<>\"']/;\n  escape.escapeReplace = /[&<>\"']/g;\n  escape.replacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n  escape.escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  escape.escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  function edit(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    return {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(/(^|[^\\[])\\^/g, '$1');\n        regex = regex.replace(name, val);\n        return this;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n  }\n\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      try {\n        var prot = decodeURIComponent(unescape(href)).replace(/[^\\w:]/g, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n\n    if (href.slice(0, 2) === '//') {\n      return base.replace(/:[\\s\\S]*/, ':') + href;\n    } else if (href.charAt(0) === '/') {\n      return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n\n  var baseUrls = {};\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n  function noop() {}\n\n  noop.exec = noop;\n\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/),\n        i = 0;\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n\n  function rtrim(str, c, invert) {\n    if (str.length === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < str.length) {\n      var currChar = str.charAt(str.length - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.substr(0, str.length - suffLen);\n  }\n\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var level = 0;\n\n    for (var i = 0; i < str.length; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  }\n  /**\n   * Marked\n   */\n\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (callback || typeof opt === 'function') {\n      if (!callback) {\n        callback = opt;\n        opt = null;\n      }\n\n      opt = merge({}, marked.defaults, opt || {});\n      checkSanitizeDeprecation(opt);\n      var highlight = opt.highlight,\n          tokens,\n          pending,\n          i = 0;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      pending = tokens.length;\n\n      var done = function done(err) {\n        if (err) {\n          opt.highlight = highlight;\n          return callback(err);\n        }\n\n        var out;\n\n        try {\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!pending) return done();\n\n      for (; i < tokens.length; i++) {\n        (function (token) {\n          if (token.type !== 'code') {\n            return --pending || done();\n          }\n\n          return highlight(token.text, token.lang, function (err, code) {\n            if (err) return done(err);\n\n            if (code == null || code === token.text) {\n              return --pending || done();\n            }\n\n            token.text = code;\n            token.escaped = true;\n            --pending || done();\n          });\n        })(tokens[i]);\n      }\n\n      return;\n    }\n\n    try {\n      if (opt) opt = merge({}, marked.defaults, opt);\n      checkSanitizeDeprecation(opt);\n      return Parser.parse(Lexer.lex(src, opt), opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if ((opt || marked.defaults).silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    return marked;\n  };\n\n  marked.getDefaults = function () {\n    return {\n      baseUrl: null,\n      breaks: false,\n      gfm: true,\n      headerIds: true,\n      headerPrefix: '',\n      highlight: null,\n      langPrefix: 'language-',\n      mangle: true,\n      pedantic: false,\n      renderer: new Renderer(),\n      sanitize: false,\n      sanitizer: null,\n      silent: false,\n      smartLists: false,\n      smartypants: false,\n      xhtml: false\n    };\n  };\n\n  marked.defaults = marked.getDefaults();\n  /**\n   * Expose\n   */\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.InlineLexer = InlineLexer;\n  marked.inlineLexer = InlineLexer.output;\n  marked.Slugger = Slugger;\n  marked.parse = marked;\n\n  if (typeof module !== 'undefined' && typeof exports === 'object') {\n    module.exports = marked;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return marked;\n    });\n  } else {\n    root.marked = marked;\n  }\n})(this || (typeof window !== 'undefined' ? window : global));","map":{"version":3,"sources":["/Users/liuhongyang/Documents/GitHub/repositories/mindmap/node_modules/marked/lib/marked.js"],"names":["root","block","newline","code","fences","hr","heading","blockquote","list","html","def","nptable","noop","table","lheading","_paragraph","text","_label","_title","edit","replace","getRegex","bullet","item","source","_tag","_comment","paragraph","normal","merge","gfm","pedantic","Lexer","options","tokens","links","Object","create","marked","defaults","rules","lex","src","lexer","prototype","token","top","next","loose","cap","bull","b","listStart","listItems","t","space","i","tag","l","isordered","istask","ischecked","exec","substring","length","push","type","lastToken","trimRight","codeBlockStyle","rtrim","lang","trim","depth","header","splitCells","align","split","cells","test","ordered","start","match","indexOf","RegExp","smartLists","slice","join","charAt","undefined","task","checked","sanitize","pre","sanitizer","escape","toLowerCase","href","title","Error","charCodeAt","inline","autolink","url","link","reflink","nolink","strong","em","br","del","_punctuation","_escapes","_scheme","_email","_attribute","_href","_extended_email","_backpedal","breaks","InlineLexer","renderer","Renderer","output","out","prevCapZero","inLink","inRawBlock","lastParenIndex","findClosingBracket","linkLen","outputLink","escapes","codespan","mangle","smartypants","image","ch","Math","random","toString","infostring","escaped","highlight","langPrefix","quote","level","raw","slugger","headerIds","headerPrefix","slug","xhtml","body","startatt","listitem","checkbox","tablerow","content","tablecell","flags","cleanUrl","baseUrl","TextRenderer","Parser","Slugger","parse","parser","inlineText","reverse","tok","pop","peek","parseText","unescape","row","cell","j","errMsg","silent","console","log","seen","value","hasOwnProperty","originalSlug","encode","escapeTest","escapeReplace","replacements","escapeTestNoEncode","escapeReplaceNoEncode","_","n","String","fromCharCode","parseInt","regex","opt","name","val","base","prot","decodeURIComponent","e","originIndependentUrl","resolveUrl","encodeURI","baseUrls","obj","target","key","arguments","call","tableRow","count","offset","str","curr","splice","c","invert","suffLen","currChar","substr","checkSanitizeDeprecation","warn","callback","pending","done","err","message","setOptions","getDefaults","inlineLexer","module","exports","define","amd","window","global"],"mappings":"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","sourcesContent":["/**\n * marked - a markdown parser\n * Copyright (c) 2011-2018, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n;(function(root) {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: /^ {0,3}(`{3,}|~{3,})([^`~\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6}) +([^\\n]*?)(?: +#+)? *(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  nptable: noop,\n  table: noop,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\nblock.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} +')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}|~{3,})[^`\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  nptable: /^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,\n  table: /^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/\n});\n\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  fences: noop, // fences not supported\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = Object.create(null);\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.pedantic) {\n    this.rules = block.pedantic;\n  } else if (this.options.gfm) {\n    this.rules = block.gfm;\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  src = src.replace(/^ +$/gm, '');\n  var next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      listStart,\n      listItems,\n      t,\n      space,\n      i,\n      tag,\n      l,\n      isordered,\n      istask,\n      ischecked;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      var lastToken = this.tokens[this.tokens.length - 1];\n      src = src.substring(cap[0].length);\n      // An indented code block cannot interrupt a paragraph.\n      if (lastToken && lastToken.type === 'paragraph') {\n        lastToken.text += '\\n' + cap[0].trimRight();\n      } else {\n        cap = cap[0].replace(/^ {4}/gm, '');\n        this.tokens.push({\n          type: 'code',\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic\n            ? rtrim(cap, '\\n')\n            : cap\n        });\n      }\n      continue;\n    }\n\n    // fences\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (cap = this.rules.nptable.exec(src)) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(item.cells[i], item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      isordered = bull.length > 1;\n\n      listStart = {\n        type: 'list_start',\n        ordered: isordered,\n        start: isordered ? +bull : '',\n        loose: false\n      };\n\n      this.tokens.push(listStart);\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      listItems = [];\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) */, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull.length > 1 ? b.length === 1\n            : (b.length > 1 || (this.options.smartLists && b !== bull))) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        if (loose) {\n          listStart.loose = true;\n        }\n\n        // Check for task list items\n        istask = /^\\[[ xX]\\] /.test(item);\n        ischecked = undefined;\n        if (istask) {\n          ischecked = item[1] !== ' ';\n          item = item.replace(/^\\[[ xX]\\] +/, '');\n        }\n\n        t = {\n          type: 'list_item_start',\n          task: istask,\n          checked: ischecked,\n          loose: loose\n        };\n\n        listItems.push(t);\n        this.tokens.push(t);\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      if (listStart.loose) {\n        l = listItems.length;\n        i = 0;\n        for (; i < l; i++) {\n          listItems[i].loose = true;\n        }\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (cap = this.rules.table.exec(src)) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(\n            item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n            item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s_])_(?!_)|^\\*([^\\s*<\\[])\\*(?!\\*)|^_([^\\s<][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_<][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s<\"][\\s\\S]*?[^\\s\\*])\\*(?!\\*|[^\\spunctuation])|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noop,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/\n};\n\n// list of punctuation marks from common mark spec\n// without ` and ] to workaround Rule 17 (inline code blocks/links)\ninline._punctuation = '!\"#$%&\\'()*+,\\\\-./:;<=>?@\\\\[^_{|}~';\ninline.em = edit(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer();\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = '',\n      link,\n      text,\n      href,\n      title,\n      cap,\n      prevCapZero;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += escape(cap[1]);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = true;\n      } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = false;\n      }\n\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0];\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      var lastParenIndex = findClosingBracket(cap[2], '()');\n      if (lastParenIndex > -1) {\n        var linkLen = 4 + cap[1].length + lastParenIndex;\n        cap[2] = cap[2].substring(0, lastParenIndex);\n        cap[0] = cap[0].substring(0, linkLen).trim();\n        cap[3] = '';\n      }\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      href = cap[2];\n      if (this.options.pedantic) {\n        link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        } else {\n          title = '';\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n      href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n      out += this.outputLink(cap, {\n        href: InlineLexer.escapes(href),\n        title: InlineLexer.escapes(title)\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      src = src.substring(cap[0].length);\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (this.inRawBlock) {\n        out += this.renderer.text(this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]);\n      } else {\n        out += this.renderer.text(escape(this.smartypants(cap[0])));\n      }\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\nInlineLexer.escapes = function(text) {\n  return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = link.href,\n      title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || marked.defaults;\n}\n\nRenderer.prototype.code = function(code, infostring, escaped) {\n  var lang = (infostring || '').match(/\\S*/)[0];\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw, slugger) {\n  if (this.options.headerIds) {\n    return '<h'\n      + level\n      + ' id=\"'\n      + this.options.headerPrefix\n      + slugger.slug(raw)\n      + '\">'\n      + text\n      + '</h'\n      + level\n      + '>\\n';\n  }\n  // ignore IDs\n  return '<h' + level + '>' + text + '</h' + level + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered, start) {\n  var type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n  return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.checkbox = function(checked) {\n  return '<input '\n    + (checked ? 'checked=\"\" ' : '')\n    + 'disabled=\"\" type=\"checkbox\"'\n    + (this.options.xhtml ? ' /' : '')\n    + '> ';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  if (body) body = '<tbody>' + body + '</tbody>';\n\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + body\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' align=\"' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n  if (href === null) {\n    return text;\n  }\n  var out = '<a href=\"' + escape(href) + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n  if (href === null) {\n    return text;\n  }\n\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function(text) {\n  return text;\n};\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n};\n\nTextRenderer.prototype.br = function() {\n  return '';\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer();\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n  this.slugger = new Slugger();\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(\n    src.links,\n    merge({}, this.options, { renderer: new TextRenderer() })\n  );\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  this.token = this.tokens.pop();\n  return this.token;\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)),\n        this.slugger);\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = '',\n          body = '',\n          i,\n          row,\n          cell,\n          j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      body = '';\n      var ordered = this.token.ordered,\n          start = this.token.start;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered, start);\n    }\n    case 'list_item_start': {\n      body = '';\n      var loose = this.token.loose;\n      var checked = this.token.checked;\n      var task = this.token.task;\n\n      if (this.token.task) {\n        body += this.renderer.checkbox(checked);\n      }\n\n      while (this.next().type !== 'list_item_end') {\n        body += !loose && this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n      return this.renderer.listitem(body, task, checked);\n    }\n    case 'html': {\n      // TODO parse inline content if parameter markdown=1\n      return this.renderer.html(this.token.text);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n    default: {\n      var errMsg = 'Token with \"' + this.token.type + '\" type was not found.';\n      if (this.options.silent) {\n        console.log(errMsg);\n      } else {\n        throw new Error(errMsg);\n      }\n    }\n  }\n};\n\n/**\n * Slugger generates header id\n */\n\nfunction Slugger() {\n  this.seen = {};\n}\n\n/**\n * Convert string to unique id\n */\n\nSlugger.prototype.slug = function(value) {\n  var slug = value\n    .toLowerCase()\n    .trim()\n    .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n    .replace(/\\s/g, '-');\n\n  if (this.seen.hasOwnProperty(slug)) {\n    var originalSlug = slug;\n    do {\n      this.seen[originalSlug]++;\n      slug = originalSlug + '-' + this.seen[originalSlug];\n    } while (this.seen.hasOwnProperty(slug));\n  }\n  this.seen[slug] = 0;\n\n  return slug;\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  if (encode) {\n    if (escape.escapeTest.test(html)) {\n      return html.replace(escape.escapeReplace, function(ch) { return escape.replacements[ch]; });\n    }\n  } else {\n    if (escape.escapeTestNoEncode.test(html)) {\n      return html.replace(escape.escapeReplaceNoEncode, function(ch) { return escape.replacements[ch]; });\n    }\n  }\n\n  return html;\n}\n\nescape.escapeTest = /[&<>\"']/;\nescape.escapeReplace = /[&<>\"']/g;\nescape.replacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\n\nescape.escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nescape.escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  return {\n    replace: function(name, val) {\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return this;\n    },\n    getRegex: function() {\n      return new RegExp(regex, opt);\n    }\n  };\n}\n\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1,\n      target,\n      key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  var row = tableRow.replace(/\\|/g, function(match, offset, str) {\n        var escaped = false,\n            curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n        if (escaped) {\n          // odd number of slashes means | is escaped\n          // so we leave it alone\n          return '|';\n        } else {\n          // add space before unescaped |\n          return ' |';\n        }\n      }),\n      cells = row.split(/ \\|/),\n      i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  if (str.length === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  var suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < str.length) {\n    var currChar = str.charAt(str.length - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, str.length - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  var level = 0;\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    checkSanitizeDeprecation(opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.getDefaults = function() {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: new Renderer(),\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    xhtml: false\n  };\n};\n\nmarked.defaults = marked.getDefaults();\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.Slugger = Slugger;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  root.marked = marked;\n}\n})(this || (typeof window !== 'undefined' ? window : global));\n"]},"metadata":{},"sourceType":"script"}