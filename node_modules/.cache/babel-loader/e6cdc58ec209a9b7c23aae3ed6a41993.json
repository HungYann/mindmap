{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/liuhongyang/Documents/GitHub/repositories/mindmap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\nalign-self: center;\\npadding: 0 10px; /* \\u4E24\\u4FA7 padding \\u7528\\u4E8E\\u589E\\u5927\\u7EC4\\u4EF6\\u70B9\\u51FB\\u533A\\u57DF\\uFF0C\\u907F\\u514D\\u5C06\\u5149\\u6807\\u5B9A\\u4F4D\\u81F3\\u9996\\u5C3E\\u5904\\u65F6\\u610F\\u5916 blur */\\ncolor: var(\",\");\\nfont-size: 20px;\\nfont-weight: 700;\\nborder-bottom: 2px solid transparent;\\noutline: none;\\ntransition: 0.2s;\\n\\n&:read-write {\\ncursor: edit;\\n}\\n\\n&:focus {\\nborder-bottom: 2px solid var(\",\");\\n}\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useEffect,useContext,useRef}from'react';import{css}from'emotion';import{context}from'../../context';import{setTitle}from'../../context/reducer/global/actionCreator';import*as refer from'../../statics/refer';var MindmapTitle=function MindmapTitle(){var self=useRef();var _useContext=useContext(context),_useContext$global=_useContext.global,title=_useContext$global.state.title,dispatch=_useContext$global.dispatch;useEffect(function(){document.title=\"RMind - \".concat(title);localStorage.setItem('title',title);},[title]);var handleKeydown=function handleKeydown(event){switch(event.key.toUpperCase()){case'ESCAPE':self.current.textContent=title;case'ENTER':self.current.blur();break;default:break;}};var handleBlur=function handleBlur(){var new_title=self.current.textContent.trim();if(new_title===''){new_title=title;}if(new_title.length>30){new_title=new_title.slice(0,30);}self.current.textContent=new_title;// contentEditable 组件内容不会被自动更新\ndispatch(setTitle(new_title));};return/*#__PURE__*/React.createElement(\"span\",{ref:self,className:wrapper,contentEditable:\"true\",suppressContentEditableWarning:\"true\",spellCheck:\"false\",onKeyDown:handleKeydown,onBlur:handleBlur},title);};export default MindmapTitle;// CSS\nvar wrapper=css(_templateObject(),refer.THEME_DARK,refer.THEME_ASSIST);","map":{"version":3,"sources":["/Users/liuhongyang/Documents/GitHub/repositories/mindmap/src/components/MindmapTitle/index.js"],"names":["React","useEffect","useContext","useRef","css","context","setTitle","refer","MindmapTitle","self","global","title","state","dispatch","document","localStorage","setItem","handleKeydown","event","key","toUpperCase","current","textContent","blur","handleBlur","new_title","trim","length","slice","wrapper","THEME_DARK","THEME_ASSIST"],"mappings":"+vBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,UAA1B,CAAsCC,MAAtC,KAAmD,OAAnD,CACA,OAAQC,GAAR,KAAkB,SAAlB,CACA,OAAQC,OAAR,KAAsB,eAAtB,CACA,OAAQC,QAAR,KAAuB,4CAAvB,CACA,MAAO,GAAKC,CAAAA,KAAZ,KAAuB,qBAAvB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvB,GAAMC,CAAAA,IAAI,CAAGN,MAAM,EAAnB,CADuB,gBAEsBD,UAAU,CAACG,OAAD,CAFhC,gCAEhBK,MAFgB,CAECC,KAFD,oBAEPC,KAFO,CAECD,KAFD,CAESE,QAFT,oBAESA,QAFT,CAIvBZ,SAAS,CAAC,UAAM,CACZa,QAAQ,CAACH,KAAT,mBAA4BA,KAA5B,EACAI,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BL,KAA9B,EACH,CAHQ,CAGN,CAACA,KAAD,CAHM,CAAT,CAKA,GAAMM,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,KAAK,CAAI,CAC3B,OAAQA,KAAK,CAACC,GAAN,CAAUC,WAAV,EAAR,EACI,IAAK,QAAL,CACIX,IAAI,CAACY,OAAL,CAAaC,WAAb,CAA2BX,KAA3B,CACJ,IAAK,OAAL,CACIF,IAAI,CAACY,OAAL,CAAaE,IAAb,GACA,MACJ,QACI,MAPR,CASH,CAVD,CAYA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrB,GAAIC,CAAAA,SAAS,CAAGhB,IAAI,CAACY,OAAL,CAAaC,WAAb,CAAyBI,IAAzB,EAAhB,CACA,GAAID,SAAS,GAAK,EAAlB,CAAsB,CAClBA,SAAS,CAAGd,KAAZ,CACH,CACD,GAAIc,SAAS,CAACE,MAAV,CAAmB,EAAvB,CAA2B,CACvBF,SAAS,CAAGA,SAAS,CAACG,KAAV,CAAgB,CAAhB,CAAmB,EAAnB,CAAZ,CACH,CACDnB,IAAI,CAACY,OAAL,CAAaC,WAAb,CAA2BG,SAA3B,CAAsC;AACtCZ,QAAQ,CAACP,QAAQ,CAACmB,SAAD,CAAT,CAAR,CACH,CAVD,CAYA,mBAAQ,4BAAM,GAAG,CAAEhB,IAAX,CAAiB,SAAS,CAAEoB,OAA5B,CAAqC,eAAe,CAAC,MAArD,CAA4D,8BAA8B,CAAC,MAA3F,CACM,UAAU,CAAC,OADjB,CAEM,SAAS,CAAEZ,aAFjB,CAEgC,MAAM,CAAEO,UAFxC,EAEqDb,KAFrD,CAAR,CAGH,CApCD,CAsCA,cAAeH,CAAAA,YAAf,CAEA;AACA,GAAMqB,CAAAA,OAAO,CAAGzB,GAAH,mBAGAG,KAAK,CAACuB,UAHN,CAekBvB,KAAK,CAACwB,YAfxB,CAAb","sourcesContent":["import React, {useEffect, useContext, useRef} from 'react';\nimport {css} from 'emotion';\nimport {context} from '../../context';\nimport {setTitle} from '../../context/reducer/global/actionCreator';\nimport * as refer from '../../statics/refer';\n\nconst MindmapTitle = () => {\n    const self = useRef();\n    const {global: {state: {title}, dispatch}} = useContext(context);\n\n    useEffect(() => {\n        document.title = `RMind - ${title}`;\n        localStorage.setItem('title', title);\n    }, [title]);\n\n    const handleKeydown = event => {\n        switch (event.key.toUpperCase()) {\n            case 'ESCAPE':\n                self.current.textContent = title;\n            case 'ENTER':\n                self.current.blur();\n                break;\n            default:\n                break;\n        }\n    };\n\n    const handleBlur = () => {\n        let new_title = self.current.textContent.trim();\n        if (new_title === '') {\n            new_title = title;\n        }\n        if (new_title.length > 30) {\n            new_title = new_title.slice(0, 30);\n        }\n        self.current.textContent = new_title; // contentEditable 组件内容不会被自动更新\n        dispatch(setTitle(new_title));\n    };\n\n    return (<span ref={self} className={wrapper} contentEditable=\"true\" suppressContentEditableWarning=\"true\"\n                  spellCheck=\"false\"\n                  onKeyDown={handleKeydown} onBlur={handleBlur}>{title}</span>);\n};\n\nexport default MindmapTitle;\n\n// CSS\nconst wrapper = css`\nalign-self: center;\npadding: 0 10px; /* 两侧 padding 用于增大组件点击区域，避免将光标定位至首尾处时意外 blur */\ncolor: var(${refer.THEME_DARK});\nfont-size: 20px;\nfont-weight: 700;\nborder-bottom: 2px solid transparent;\noutline: none;\ntransition: 0.2s;\n\n&:read-write {\ncursor: edit;\n}\n\n&:focus {\nborder-bottom: 2px solid var(${refer.THEME_ASSIST});\n}\n`;"]},"metadata":{},"sourceType":"module"}