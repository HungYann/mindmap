{"ast":null,"code":"import * as refer from '../statics/refer';\nexport default ((nodeStatus, mindmapHook, historyHook) => {\n  const addChild = mindmapHook.addChild,\n        addSibling = mindmapHook.addSibling,\n        editNode = mindmapHook.editNode,\n        deleteNode = mindmapHook.deleteNode,\n        toggleChildren = mindmapHook.toggleChildren,\n        selectNode = mindmapHook.selectNode;\n\n  const handleKeyEventWithNode = event => {\n    switch (event.key.toUpperCase()) {\n      case 'TAB':\n        addChild(nodeStatus.cur_select);\n        break;\n\n      case 'ENTER':\n        event.preventDefault(); // 防止 enter 的点击行为\n\n        addSibling(nodeStatus.cur_select, nodeStatus.cur_node_info.parent.id);\n        break;\n\n      case 'F2':\n        editNode(nodeStatus.cur_select);\n        break;\n\n      case 'BACKSPACE':\n      case 'DELETE':\n        deleteNode(nodeStatus.cur_select, nodeStatus.cur_node_info.parent.id);\n        break;\n\n      case ' ':\n        event.preventDefault(); // 默认行为会导致画面移动，因此 prevent，下同\n\n        toggleChildren(nodeStatus.cur_select, !nodeStatus.cur_node_info.showChildren); // Boolean('false') === true\n\n        break;\n\n      case 'ARROWLEFT':\n        event.preventDefault();\n\n        if (nodeStatus.cur_node_info.parent === refer.ROOT_PARENT) {\n          if (nodeStatus.cur_node_info.children.length > 3) {\n            selectNode(nodeStatus.cur_node_info.children[Math.trunc(nodeStatus.cur_node_info.children.length / 2)].id);\n          }\n        } else {\n          if (!nodeStatus.cur_node_info.on_left) {\n            selectNode(nodeStatus.cur_node_info.parent.id);\n          } else if (nodeStatus.cur_node_info.children.length > 0) {\n            selectNode(nodeStatus.cur_node_info.children[0].id);\n          }\n        }\n\n        break;\n\n      case 'ARROWRIGHT':\n        event.preventDefault();\n\n        if (nodeStatus.cur_node_info.on_left) {\n          selectNode(nodeStatus.cur_node_info.parent.id);\n        } else if (nodeStatus.cur_node_info.children.length > 0) {\n          selectNode(nodeStatus.cur_node_info.children[0].id);\n        }\n\n        break;\n\n      case 'ARROWUP':\n        {\n          event.preventDefault();\n          const cur_index = nodeStatus.cur_node_info.parent.children.findIndex(child => child.id === nodeStatus.cur_node_info.id);\n\n          if (cur_index > 0) {\n            selectNode(nodeStatus.cur_node_info.parent.children[cur_index - 1].id);\n          }\n\n          break;\n        }\n\n      case 'ARROWDOWN':\n        {\n          event.preventDefault();\n          const cur_index = nodeStatus.cur_node_info.parent.children.findIndex(child => child.id === nodeStatus.cur_node_info.id),\n                last_index = nodeStatus.cur_node_info.parent.children.length - 1;\n\n          if (cur_index < last_index) {\n            selectNode(nodeStatus.cur_node_info.parent.children[cur_index + 1].id);\n          }\n\n          break;\n        }\n\n      default:\n        break;\n    }\n  };\n\n  return event => {\n    if (nodeStatus.cur_edit === '') {\n      const is_on_mac = navigator.platform.toUpperCase().startsWith('MAC');\n      const combine_key_pressed = is_on_mac ? event.metaKey : event.ctrlKey;\n\n      if (combine_key_pressed && event.key.toUpperCase() === 'Z') {\n        if (event.shiftKey) {\n          historyHook.redoHistory();\n        } else {\n          historyHook.undoHistory();\n        }\n      }\n    }\n\n    if (nodeStatus.cur_select !== '') {\n      try {\n        handleKeyEventWithNode(event); // 据说在 try 代码块中写大量语句会影响性能，因此包装为函数\n      } catch (e) {\n        alert('当前的节点信息存在问题，请重新选择节点');\n      }\n    }\n  };\n});","map":{"version":3,"sources":["/Users/liuhongyang/Desktop/RMind-develop/src/methods/getKeydownEvent.js"],"names":["refer","nodeStatus","mindmapHook","historyHook","addChild","addSibling","editNode","deleteNode","toggleChildren","selectNode","handleKeyEventWithNode","event","key","toUpperCase","cur_select","preventDefault","cur_node_info","parent","id","showChildren","ROOT_PARENT","children","length","Math","trunc","on_left","cur_index","findIndex","child","last_index","cur_edit","is_on_mac","navigator","platform","startsWith","combine_key_pressed","metaKey","ctrlKey","shiftKey","redoHistory","undoHistory","e","alert"],"mappings":"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","sourcesContent":["import * as refer from '../statics/refer';\n\nexport default (nodeStatus, mindmapHook, historyHook) => {\n    const {addChild, addSibling, editNode, deleteNode, toggleChildren, selectNode} = mindmapHook;\n\n    const handleKeyEventWithNode = event => {\n        switch (event.key.toUpperCase()) {\n            case 'TAB':\n                addChild(nodeStatus.cur_select);\n                break;\n            case 'ENTER':\n                event.preventDefault(); // 防止 enter 的点击行为\n                addSibling(nodeStatus.cur_select, nodeStatus.cur_node_info.parent.id);\n                break;\n            case 'F2':\n                editNode(nodeStatus.cur_select);\n                break;\n            case 'BACKSPACE':\n            case 'DELETE':\n                deleteNode(nodeStatus.cur_select, nodeStatus.cur_node_info.parent.id);\n                break;\n            case ' ':\n                event.preventDefault(); // 默认行为会导致画面移动，因此 prevent，下同\n                toggleChildren(nodeStatus.cur_select, !nodeStatus.cur_node_info.showChildren); // Boolean('false') === true\n                break;\n            case 'ARROWLEFT':\n                event.preventDefault();\n                if (nodeStatus.cur_node_info.parent === refer.ROOT_PARENT) {\n                    if (nodeStatus.cur_node_info.children.length > 3) {\n                        selectNode(nodeStatus.cur_node_info.children[Math.trunc(nodeStatus.cur_node_info.children.length / 2)].id);\n                    }\n                } else {\n                    if (!nodeStatus.cur_node_info.on_left) {\n                        selectNode(nodeStatus.cur_node_info.parent.id);\n                    } else if (nodeStatus.cur_node_info.children.length > 0) {\n                        selectNode(nodeStatus.cur_node_info.children[0].id);\n                    }\n                }\n                break;\n            case 'ARROWRIGHT':\n                event.preventDefault();\n                if (nodeStatus.cur_node_info.on_left) {\n                    selectNode(nodeStatus.cur_node_info.parent.id);\n                } else if (nodeStatus.cur_node_info.children.length > 0) {\n                    selectNode(nodeStatus.cur_node_info.children[0].id);\n                }\n                break;\n            case 'ARROWUP': {\n                event.preventDefault();\n                const cur_index = nodeStatus.cur_node_info.parent.children.findIndex(child => child.id === nodeStatus.cur_node_info.id);\n                if (cur_index > 0) {\n                    selectNode(nodeStatus.cur_node_info.parent.children[cur_index - 1].id);\n                }\n                break;\n            }\n            case 'ARROWDOWN': {\n                event.preventDefault();\n                const cur_index = nodeStatus.cur_node_info.parent.children.findIndex(child => child.id === nodeStatus.cur_node_info.id),\n                    last_index = nodeStatus.cur_node_info.parent.children.length - 1;\n                if (cur_index < last_index) {\n                    selectNode(nodeStatus.cur_node_info.parent.children[cur_index + 1].id);\n                }\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    return event => {\n        if (nodeStatus.cur_edit === '') {\n            const is_on_mac = navigator.platform.toUpperCase().startsWith('MAC');\n            const combine_key_pressed = is_on_mac ? event.metaKey : event.ctrlKey;\n            if (combine_key_pressed && event.key.toUpperCase() === 'Z') {\n                if (event.shiftKey) {\n                    historyHook.redoHistory();\n                } else {\n                    historyHook.undoHistory();\n                }\n            }\n        }\n        if (nodeStatus.cur_select !== '') {\n            try {\n                handleKeyEventWithNode(event); // 据说在 try 代码块中写大量语句会影响性能，因此包装为函数\n            } catch (e) {\n                alert('当前的节点信息存在问题，请重新选择节点');\n            }\n        }\n    };\n};"]},"metadata":{},"sourceType":"module"}