{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/liuhongyang/Documents/GitHub/repositories/mindmap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n    margin-top:20px;\\n    width:295px;\\n    height:460px;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\nheight: 500px;\\nwidth: 300px;\\ntop: 20px;\\nright: 40px;\\nmargin: 56px 0 0;\\noverflow: auto;\\nposition: fixed;\\n//z-index: 10;\\nborder: 2px solid #eeee;\\nborder-radius: 10px;\\nbackground: #fff;\\nbackground:rgba(255,255,255,1);\\nbox-shadow:0px 2px 12px 0px rgba(0,0,0,0.16);\\npadding:20px 10px;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useContext,useEffect}from'react';import{css}from'emotion';import useEditPanel from'../../customHooks/useEditPanel';import useMindmap from'../../customHooks/useMindmap';import{context}from'../../context';import MdEditor from'../../components/mdEditor';var EditPanel=function EditPanel(){// const self = useRef();\nvar _useContext=useContext(context),epState=_useContext.editPanel.state,nState=_useContext.nodeStatus.state;var _nState$cur_node_info=nState.cur_node_info,_nState$cur_node_info2=_nState$cur_node_info.info,info=_nState$cur_node_info2===void 0?'':_nState$cur_node_info2,text=_nState$cur_node_info.text,id=_nState$cur_node_info.id;var mindmapHook=useMindmap();var editPanleHook=useEditPanel();if(!epState.isShow){return null;}return/*#__PURE__*/React.createElement(\"div\",{className:show,onClick:function onClick(e){return e.stopPropagation();},onKeyDown:function onKeyDown(e){return e.stopPropagation();}},\"\\u5F53\\u524D\\u7F16\\u8F91\\u8282\\u70B9\\uFF1A\",text||'无',/*#__PURE__*/React.createElement(\"i\",{className:\"zwicon-close\",style:close,onClick:function onClick(){return editPanleHook.toggelPanelShow(false);}}),/*#__PURE__*/React.createElement(MdEditor,{className:mdEditor,propText:info,onBlur:function onBlur(value){return id&&mindmapHook.editNodeInfo(id,value);}}));};export default EditPanel;// CSS\nvar show=css(_templateObject());var close={fontSize:20,position:'absolute',cursor:'pointer',right:'10px',top:'5px'};var mdEditor=css(_templateObject2());","map":{"version":3,"sources":["/Users/liuhongyang/Documents/GitHub/repositories/mindmap/src/features/EditPanel/index.js"],"names":["React","useContext","useEffect","css","useEditPanel","useMindmap","context","MdEditor","EditPanel","epState","editPanel","state","nState","nodeStatus","cur_node_info","info","text","id","mindmapHook","editPanleHook","isShow","show","e","stopPropagation","close","toggelPanelShow","mdEditor","value","editNodeInfo","fontSize","position","cursor","right","top"],"mappings":"qzBAAA,MAAOA,CAAAA,KAAP,EAAeC,UAAf,CAA2BC,SAA3B,KAA2C,OAA3C,CACA,OAAQC,GAAR,KAAkB,SAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,OAAQC,OAAR,KAAsB,eAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,2BAArB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACpB;AADoB,gBAG0CP,UAAU,CAACK,OAAD,CAHpD,CAGKG,OAHL,aAGbC,SAHa,CAGDC,KAHC,CAGgCC,MAHhC,aAGcC,UAHd,CAG0BF,KAH1B,2BAIoBC,MAJpB,CAIbE,aAJa,8CAIEC,IAJF,CAIEA,IAJF,iCAIO,EAJP,wBAIUC,IAJV,uBAIUA,IAJV,CAIeC,EAJf,uBAIeA,EAJf,CAMpB,GAAMC,CAAAA,WAAW,CAACb,UAAU,EAA5B,CACA,GAAMc,CAAAA,aAAa,CAACf,YAAY,EAAhC,CAEA,GAAG,CAACK,OAAO,CAACW,MAAZ,CAAmB,CACf,MAAO,KAAP,CACH,CAED,mBACI,2BAAK,SAAS,CAAEC,IAAhB,CAAsB,OAAO,CAAE,iBAAAC,CAAC,QAAEA,CAAAA,CAAC,CAACC,eAAF,EAAF,EAAhC,CAAuD,SAAS,CAAE,mBAAAD,CAAC,QAAEA,CAAAA,CAAC,CAACC,eAAF,EAAF,EAAnE,+CACYP,IAAI,EAAI,GADpB,cAGI,yBAAG,SAAS,CAAC,cAAb,CAA4B,KAAK,CAAEQ,KAAnC,CAA0C,OAAO,CAAE,yBAAIL,CAAAA,aAAa,CAACM,eAAd,CAA8B,KAA9B,CAAJ,EAAnD,EAHJ,cAII,oBAAC,QAAD,EACI,SAAS,CAAEC,QADf,CAEI,QAAQ,CAAEX,IAFd,CAGI,MAAM,CAAE,gBAACY,KAAD,QAAUV,CAAAA,EAAE,EAAIC,WAAW,CAACU,YAAZ,CAAyBX,EAAzB,CAA4BU,KAA5B,CAAhB,EAHZ,EAJJ,CADJ,CAcH,CA3BD,CA6BA,cAAenB,CAAAA,SAAf,CAEA;AACA,GAAMa,CAAAA,IAAI,CAAGlB,GAAH,mBAAV,CAiBA,GAAMqB,CAAAA,KAAK,CAAC,CACRK,QAAQ,CAAC,EADD,CAERC,QAAQ,CAAE,UAFF,CAGRC,MAAM,CAAC,SAHC,CAIRC,KAAK,CAAE,MAJC,CAKRC,GAAG,CAAE,KALG,CAAZ,CAQA,GAAMP,CAAAA,QAAQ,CAACvB,GAAD,oBAAd","sourcesContent":["import React, {useContext, useEffect} from 'react';\nimport {css} from 'emotion';\nimport useEditPanel from '../../customHooks/useEditPanel';\nimport useMindmap from '../../customHooks/useMindmap';\nimport {context} from '../../context'\nimport MdEditor from '../../components/mdEditor';\n\nconst EditPanel = () => {\n    // const self = useRef();\n    \n    const {editPanel: {state:epState},nodeStatus:{state:nState}} =useContext(context)\n    const {cur_node_info:{info='',text,id}}=nState\n    \n    const mindmapHook=useMindmap()\n    const editPanleHook=useEditPanel();\n    \n    if(!epState.isShow){\n        return null;\n    }\n    \n    return (        \n        <div className={show} onClick={e=>e.stopPropagation()} onKeyDown={e=>e.stopPropagation()}>\n            当前编辑节点：{text || '无'}        \n\n            <i className=\"zwicon-close\" style={close} onClick={()=>editPanleHook.toggelPanelShow(false)}></i>                        \n            <MdEditor \n                className={mdEditor} \n                propText={info}\n                onBlur={(value)=> id && mindmapHook.editNodeInfo(id,value)}\n            />                       \n            {/* <Button type=\"primary\" onClick={()=>mindmapHook.editNodeInfo(id,inputVal)}>保存</Button>\n            <Button type=\"primary\" onClick={()=>editPanleHook.toggelPanelShow(false)}>关闭</Button> */}            \n        </div>\n    );\n};\n\nexport default EditPanel;\n\n// CSS\nconst show = css`\nheight: 500px;\nwidth: 300px;\ntop: 20px;\nright: 40px;\nmargin: 56px 0 0;\noverflow: auto;\nposition: fixed;\n//z-index: 10;\nborder: 2px solid #eeee;\nborder-radius: 10px;\nbackground: #fff;\nbackground:rgba(255,255,255,1);\nbox-shadow:0px 2px 12px 0px rgba(0,0,0,0.16);\npadding:20px 10px;\n`;\n\nconst close={    \n    fontSize:20,\n    position: 'absolute',\n    cursor:'pointer',\n    right: '10px',\n    top: '5px',\n}\n\nconst mdEditor=css`\n    margin-top:20px;\n    width:295px;\n    height:460px;\n`"]},"metadata":{},"sourceType":"module"}