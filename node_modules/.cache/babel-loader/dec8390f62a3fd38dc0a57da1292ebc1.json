{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/liuhongyang/Documents/GitHub/repositories/mindmap/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/liuhongyang/Documents/GitHub/repositories/mindmap/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/liuhongyang/Documents/GitHub/repositories/mindmap/src/components/LineCanvas/index.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\nposition: absolute;\\ntop:0;\\nleft:0;\\nz-index: -2;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport { css } from 'emotion';\nimport useTheme from '../../customHooks/useTheme';\nimport { context } from '../../context';\nimport { drawLineCanvas } from '../../methods/drawCanvas';\n\nconst LineCanvas = ({\n  parent_ref,\n  mindmap,\n  node_refs\n}) => {\n  const self = useRef();\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        flag = _useState2[0],\n        setFlag = _useState2[1];\n\n  const _useTheme = useTheme(),\n        theme = _useTheme.theme;\n\n  const _useContext = useContext(context),\n        gState = _useContext.global.state;\n\n  const handleWindowResize = e => {\n    setFlag(Date.now());\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', handleWindowResize);\n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, []);\n  useEffect(() => {\n    const dom = self.current;\n    dom.width = parent_ref.current.offsetWidth;\n    dom.height = parent_ref.current.offsetHeight; // 重新设置 canvas 大小，也兼具清除画板的作用\n\n    const map = new Map(Array.from(node_refs).map(ref => [ref.current.id, [ref.current.offsetLeft, ref.current.offsetLeft + ref.current.offsetWidth, ref.current.offsetTop + 0.5 * ref.current.offsetHeight, ref.current.dataset.tag]]));\n    const ctx = dom.getContext('2d');\n    drawLineCanvas(ctx, theme, mindmap, map);\n  }, [mindmap, theme, flag, gState.zoom]);\n  return React.createElement(\"canvas\", {\n    ref: self,\n    className: wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  });\n};\n\nexport default LineCanvas; // CSS\n\nconst wrapper = css(_templateObject());","map":{"version":3,"sources":["/Users/liuhongyang/Documents/GitHub/repositories/mindmap/src/components/LineCanvas/index.js"],"names":["React","useState","useEffect","useRef","useContext","css","useTheme","context","drawLineCanvas","LineCanvas","parent_ref","mindmap","node_refs","self","flag","setFlag","theme","gState","global","state","handleWindowResize","e","Date","now","window","addEventListener","removeEventListener","dom","current","width","offsetWidth","height","offsetHeight","map","Map","Array","from","ref","id","offsetLeft","offsetTop","dataset","tag","ctx","getContext","zoom","wrapper"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,EAA4CC,UAA5C,QAA6D,OAA7D;AACA,SAAQC,GAAR,QAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAAQC,OAAR,QAAsB,eAAtB;AACA,SAAQC,cAAR,QAA6B,0BAA7B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,KAAsC;AACrD,QAAMC,IAAI,GAAGV,MAAM,EAAnB;;AADqD,oBAE7BF,QAAQ,CAAC,CAAD,CAFqB;AAAA;AAAA,QAE9Ca,IAF8C;AAAA,QAExCC,OAFwC;;AAAA,oBAIrCT,QAAQ,EAJ6B;AAAA,QAI9CU,KAJ8C,aAI9CA,KAJ8C;;AAAA,sBAKvBZ,UAAU,CAACG,OAAD,CALa;AAAA,QAKhCU,MALgC,eAK9CC,MAL8C,CAKtCC,KALsC;;AAOrD,QAAMC,kBAAkB,GAAIC,CAAD,IAAO;AAC9BN,IAAAA,OAAO,CAACO,IAAI,CAACC,GAAL,EAAD,CAAP;AACH,GAFD;;AAIArB,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCL,kBAAlC;AACA,WAAO,MAAM;AACTI,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCN,kBAArC;AACH,KAFD;AAGH,GALQ,EAKN,EALM,CAAT;AAOAlB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMyB,GAAG,GAAGd,IAAI,CAACe,OAAjB;AACAD,IAAAA,GAAG,CAACE,KAAJ,GAAYnB,UAAU,CAACkB,OAAX,CAAmBE,WAA/B;AACAH,IAAAA,GAAG,CAACI,MAAJ,GAAarB,UAAU,CAACkB,OAAX,CAAmBI,YAAhC,CAHY,CAGkC;;AAC9C,UAAMC,GAAG,GAAG,IAAIC,GAAJ,CAAQC,KAAK,CAACC,IAAN,CAAWxB,SAAX,EAAsBqB,GAAtB,CAA0BI,GAAG,IAAI,CAACA,GAAG,CAACT,OAAJ,CAAYU,EAAb,EAAiB,CAAED,GAAG,CAACT,OAAJ,CAAYW,UAAd,EAA4BF,GAAG,CAACT,OAAJ,CAAYW,UAAZ,GAAyBF,GAAG,CAACT,OAAJ,CAAYE,WAAjE,EAAgFO,GAAG,CAACT,OAAJ,CAAYY,SAAZ,GAAwB,MAAMH,GAAG,CAACT,OAAJ,CAAYI,YAA1H,EAAyIK,GAAG,CAACT,OAAJ,CAAYa,OAAZ,CAAoBC,GAA7J,CAAjB,CAAjC,CAAR,CAAZ;AACA,UAAMC,GAAG,GAAGhB,GAAG,CAACiB,UAAJ,CAAe,IAAf,CAAZ;AACApC,IAAAA,cAAc,CAACmC,GAAD,EAAM3B,KAAN,EAAaL,OAAb,EAAsBsB,GAAtB,CAAd;AACH,GAPQ,EAON,CAACtB,OAAD,EAAUK,KAAV,EAAiBF,IAAjB,EAAuBG,MAAM,CAAC4B,IAA9B,CAPM,CAAT;AASA,SAAQ;AAAQ,IAAA,GAAG,EAAEhC,IAAb;AAAmB,IAAA,SAAS,EAAEiC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR;AACH,CA5BD;;AA8BA,eAAerC,UAAf,C,CAEA;;AACA,MAAMqC,OAAO,GAAGzC,GAAH,mBAAb","sourcesContent":["import React, {useState, useEffect, useRef, useContext} from 'react';\nimport {css} from 'emotion';\nimport useTheme from '../../customHooks/useTheme';\nimport {context} from '../../context'\nimport {drawLineCanvas} from '../../methods/drawCanvas';\n\nconst LineCanvas = ({parent_ref, mindmap, node_refs}) => {\n    const self = useRef();\n    const [flag, setFlag] = useState(0);\n\n    const {theme} = useTheme();\n    const {global:{state:gState}}=useContext(context);\n\n    const handleWindowResize = (e) => {\n        setFlag(Date.now());        \n    };\n\n    useEffect(() => {\n        window.addEventListener('resize', handleWindowResize);\n        return () => {\n            window.removeEventListener('resize', handleWindowResize);\n        }\n    }, []);\n\n    useEffect(() => {\n        const dom = self.current;\n        dom.width = parent_ref.current.offsetWidth;\n        dom.height = parent_ref.current.offsetHeight; // 重新设置 canvas 大小，也兼具清除画板的作用\n        const map = new Map(Array.from(node_refs).map(ref => [ref.current.id, [(ref.current.offsetLeft), (ref.current.offsetLeft + ref.current.offsetWidth), (ref.current.offsetTop + 0.5 * ref.current.offsetHeight), ref.current.dataset.tag]]));\n        const ctx = dom.getContext('2d');\n        drawLineCanvas(ctx, theme, mindmap, map);\n    }, [mindmap, theme, flag, gState.zoom]);\n\n    return (<canvas ref={self} className={wrapper} />);\n};\n\nexport default LineCanvas;\n\n// CSS\nconst wrapper = css`\nposition: absolute;\ntop:0;\nleft:0;\nz-index: -2;\n`;"]},"metadata":{},"sourceType":"module"}