{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/liuhongyang/Documents/GitHub/repositories/mindmap/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/liuhongyang/Documents/GitHub/repositories/mindmap/src/components/Node/subComponents/InputDiv.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\nposition: absolute;\\ntop: 0;\\nbottom: 0;\\nleft: 0;\\nright: 0;\\nwidth: fit-content;\\nmin-width: 1em;\\nmax-width: 10em;\\nheight: fit-content;\\nmargin: auto;\\npadding: 10px;\\ncolor: #333333;\\nbackground-color: #ffffff;\\nbox-shadow: 0 0 20px #aaaaaa;\\nborder-radius: 5px;\\noutline: none;\\nz-index: 3;\\nuser-select: text;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useRef } from 'react';\nimport { css } from 'emotion';\nimport useMindmap from '../../../customHooks/useMindmap';\nimport { handlePropagation } from '../../../methods/assistFunctions';\n\nconst InputDiv = ({\n  node_id,\n  children\n}) => {\n  const self = useRef();\n\n  const _useMindmap = useMindmap(),\n        changeText = _useMindmap.changeText,\n        selectNode = _useMindmap.selectNode;\n\n  const handleKeydown = event => {\n    switch (event.key.toUpperCase()) {\n      case 'ESCAPE':\n        self.current.textContent = children;\n\n      case 'ENTER':\n        self.current.blur();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleBlur = () => {\n    changeText(node_id, self.current.textContent);\n    selectNode(node_id);\n  };\n\n  useEffect(() => {\n    self.current.focus();\n    const selection = document.getSelection();\n    selection.selectAllChildren(self.current);\n  }, []);\n  return React.createElement(\"div\", {\n    className: wrapper,\n    ref: self,\n    contentEditable: \"true\",\n    suppressContentEditableWarning: \"true\",\n    onClick: handlePropagation,\n    onKeyDown: handleKeydown,\n    onBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, children);\n};\n\nexport default InputDiv; // CSS\n\nconst wrapper = css(_templateObject());","map":{"version":3,"sources":["/Users/liuhongyang/Documents/GitHub/repositories/mindmap/src/components/Node/subComponents/InputDiv.js"],"names":["React","useEffect","useRef","css","useMindmap","handlePropagation","InputDiv","node_id","children","self","changeText","selectNode","handleKeydown","event","key","toUpperCase","current","textContent","blur","handleBlur","focus","selection","document","getSelection","selectAllChildren","wrapper"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,QAAuC,OAAvC;AACA,SAAQC,GAAR,QAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,SAAQC,iBAAR,QAAgC,kCAAhC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAD,KAAyB;AACtC,QAAMC,IAAI,GAAGP,MAAM,EAAnB;;AADsC,sBAELE,UAAU,EAFL;AAAA,QAE/BM,UAF+B,eAE/BA,UAF+B;AAAA,QAEnBC,UAFmB,eAEnBA,UAFmB;;AAItC,QAAMC,aAAa,GAAGC,KAAK,IAAI;AAC3B,YAAQA,KAAK,CAACC,GAAN,CAAUC,WAAV,EAAR;AACI,WAAK,QAAL;AACIN,QAAAA,IAAI,CAACO,OAAL,CAAaC,WAAb,GAA2BT,QAA3B;;AACJ,WAAK,OAAL;AACIC,QAAAA,IAAI,CAACO,OAAL,CAAaE,IAAb;AACA;;AACJ;AACI;AAPR;AASH,GAVD;;AAYA,QAAMC,UAAU,GAAG,MAAM;AACrBT,IAAAA,UAAU,CAACH,OAAD,EAAUE,IAAI,CAACO,OAAL,CAAaC,WAAvB,CAAV;AACAN,IAAAA,UAAU,CAACJ,OAAD,CAAV;AACH,GAHD;;AAKAN,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,IAAI,CAACO,OAAL,CAAaI,KAAb;AACA,UAAMC,SAAS,GAAGC,QAAQ,CAACC,YAAT,EAAlB;AACAF,IAAAA,SAAS,CAACG,iBAAV,CAA4Bf,IAAI,CAACO,OAAjC;AACH,GAJQ,EAIN,EAJM,CAAT;AAMA,SAAQ;AAAK,IAAA,SAAS,EAAES,OAAhB;AAAyB,IAAA,GAAG,EAAEhB,IAA9B;AAAoC,IAAA,eAAe,EAAC,MAApD;AAA2D,IAAA,8BAA8B,EAAC,MAA1F;AACK,IAAA,OAAO,EAAEJ,iBADd;AACiC,IAAA,SAAS,EAAEO,aAD5C;AAC2D,IAAA,MAAM,EAAEO,UADnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACgFX,QADhF,CAAR;AAEH,CA7BD;;AA+BA,eAAeF,QAAf,C,CAEA;;AACA,MAAMmB,OAAO,GAAGtB,GAAH,mBAAb","sourcesContent":["import React, {useEffect, useRef} from 'react';\nimport {css} from 'emotion';\nimport useMindmap from '../../../customHooks/useMindmap';\nimport {handlePropagation} from '../../../methods/assistFunctions';\n\nconst InputDiv = ({node_id, children}) => {\n    const self = useRef();\n    const {changeText, selectNode} = useMindmap();\n\n    const handleKeydown = event => {\n        switch (event.key.toUpperCase()) {\n            case 'ESCAPE':\n                self.current.textContent = children;\n            case 'ENTER':\n                self.current.blur();\n                break;\n            default:\n                break;\n        }\n    };\n\n    const handleBlur = () => {\n        changeText(node_id, self.current.textContent);\n        selectNode(node_id);\n    };\n\n    useEffect(() => {\n        self.current.focus();\n        const selection = document.getSelection();\n        selection.selectAllChildren(self.current);\n    }, []);\n\n    return (<div className={wrapper} ref={self} contentEditable=\"true\" suppressContentEditableWarning=\"true\"\n                 onClick={handlePropagation} onKeyDown={handleKeydown} onBlur={handleBlur}>{children}</div>);\n};\n\nexport default InputDiv;\n\n// CSS\nconst wrapper = css`\nposition: absolute;\ntop: 0;\nbottom: 0;\nleft: 0;\nright: 0;\nwidth: fit-content;\nmin-width: 1em;\nmax-width: 10em;\nheight: fit-content;\nmargin: auto;\npadding: 10px;\ncolor: #333333;\nbackground-color: #ffffff;\nbox-shadow: 0 0 20px #aaaaaa;\nborder-radius: 5px;\noutline: none;\nz-index: 3;\nuser-select: text;\n`;"]},"metadata":{},"sourceType":"module"}