{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/liuhongyang/Documents/GitHub/repositories/mindmap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"/Users/liuhongyang/Documents/GitHub/repositories/mindmap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\nposition: relative;\\nwidth: fit-content;\\npadding: 30vh 30vw;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useEffect,useContext,useRef,useMemo,useState}from'react';import{css}from'emotion';import*as refer from'../../statics/refer';import{context}from'../../context/';import{setHistory}from'../../context/reducer/history/actionCreator';import useMindmap from'../../customHooks/useMindmap';import useHistory from'../../customHooks/useHistory';import getKeydownEvent from'../../methods/getKeydownEvent';import getMouseWheelEvent from'../../methods/getMouseWheelEvent';import RootNode from'../../components/RootNode';import DragCanvas from'../../components/DragCanvas';import LineCanvas from'../../components/LineCanvas';import useZoom from'../../customHooks/useZoom';import useMove from'../../customHooks/useMove';import{debounce}from'../../methods/assistFunctions';var node_refs=new Set();var Mindmap=function Mindmap(_ref){var container_ref=_ref.container_ref;var self=useRef();var _useContext=useContext(context),root_node=_useContext.mindmap.state,nodeStatus=_useContext.nodeStatus.state,hDispatch=_useContext.history.dispatch,gState=_useContext.global.state;var historyHook=useHistory();var mindmapHook=useMindmap();var zoomHook=useZoom();var moveHook=useMove();var clearNodeStatus=mindmapHook.clearNodeStatus;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),FLAG=_useState2[0],setFLAG=_useState2[1];var mindmap_json=useMemo(function(){return JSON.stringify(root_node);},[root_node]);// 如果 root_node 没有 JSON.stringify，使用按键操作时有时会连续两次触发 useEffect，目前没查出来为什么。利用 useMemo 避免重复触发\nvar handleResize=function handleResize(){setFLAG(Date.now());};useEffect(function(){var handleKeydown=getKeydownEvent(nodeStatus,mindmapHook,historyHook);window.addEventListener('keydown',handleKeydown);return function(){window.removeEventListener('keydown',handleKeydown);};},[nodeStatus]);useEffect(function(){window.addEventListener('click',clearNodeStatus);return function(){window.removeEventListener('click',clearNodeStatus);};},[]);useEffect(function(){window.addEventListener('resize',handleResize);return function(){window.removeEventListener('resize',handleResize);};},[]);useEffect(function(){var normalizeXY=container_ref.current.clientWidth/container_ref.current.clientHeight;var handleMouseWheel=getMouseWheelEvent(zoomHook,gState.zoom);var handleMapMove=getMouseWheelEvent(moveHook,gState.zoom,normalizeXY);document.querySelector(\"#\".concat(refer.MINDMAP_MAIN)).addEventListener('wheel',handleMouseWheel);document.querySelector(\"#\".concat(refer.MINDMAP_MAIN)).addEventListener('mousemove',debounce(handleMapMove,4));document.querySelector(\"#\".concat(refer.MINDMAP_MAIN)).addEventListener('mousedown',handleMapMove);return function(){document.querySelector(\"#\".concat(refer.MINDMAP_MAIN)).removeEventListener('wheel',handleMouseWheel);document.querySelector(\"#\".concat(refer.MINDMAP_MAIN)).addEventListener('mousemove',debounce(handleMapMove,4));document.querySelector(\"#\".concat(refer.MINDMAP_MAIN)).addEventListener('mousedown',handleMapMove);};},[FLAG]);useEffect(function(){localStorage.setItem('mindmap',mindmap_json);hDispatch(setHistory(mindmap_json,nodeStatus.cur_select||nodeStatus.cur_edit));},[mindmap_json]);return/*#__PURE__*/React.createElement(\"div\",{className:wrapper,ref:self,style:{zoom:gState.zoom,left:gState.x+'vw',top:gState.y+'vh'},id:refer.MINDMAP_ID,draggable:false},/*#__PURE__*/React.createElement(RootNode,{key:root_node.id,layer:0,node:root_node,node_refs:node_refs}),/*#__PURE__*/React.createElement(DragCanvas,{parent_ref:self,container_ref:container_ref,mindmap:root_node}),/*#__PURE__*/React.createElement(LineCanvas,{parent_ref:self,mindmap:root_node,node_refs:node_refs}));};export default Mindmap;// CSS\nvar wrapper=css(_templateObject());","map":{"version":3,"sources":["/Users/liuhongyang/Documents/GitHub/repositories/mindmap/src/features/Mindmap/index.js"],"names":["React","useEffect","useContext","useRef","useMemo","useState","css","refer","context","setHistory","useMindmap","useHistory","getKeydownEvent","getMouseWheelEvent","RootNode","DragCanvas","LineCanvas","useZoom","useMove","debounce","node_refs","Set","Mindmap","container_ref","self","root_node","mindmap","state","nodeStatus","hDispatch","history","dispatch","gState","global","historyHook","mindmapHook","zoomHook","moveHook","clearNodeStatus","FLAG","setFLAG","mindmap_json","JSON","stringify","handleResize","Date","now","handleKeydown","window","addEventListener","removeEventListener","normalizeXY","current","clientWidth","clientHeight","handleMouseWheel","zoom","handleMapMove","document","querySelector","MINDMAP_MAIN","localStorage","setItem","cur_select","cur_edit","wrapper","left","x","top","y","MINDMAP_ID","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useRef, useMemo, useState } from 'react';\nimport { css } from 'emotion';\nimport * as refer from '../../statics/refer';\nimport { context } from '../../context/';\nimport { setHistory } from '../../context/reducer/history/actionCreator';\nimport useMindmap from '../../customHooks/useMindmap';\nimport useHistory from '../../customHooks/useHistory';\nimport getKeydownEvent from '../../methods/getKeydownEvent';\nimport getMouseWheelEvent from '../../methods/getMouseWheelEvent';\nimport RootNode from '../../components/RootNode';\nimport DragCanvas from '../../components/DragCanvas';\nimport LineCanvas from '../../components/LineCanvas';\nimport useZoom from '../../customHooks/useZoom';\nimport useMove from '../../customHooks/useMove';\nimport { debounce } from '../../methods/assistFunctions';\n\nconst node_refs = new Set();\n\nconst Mindmap = ({ container_ref }) => {\n    const self = useRef();\n    const { mindmap: { state: root_node }, nodeStatus: { state: nodeStatus }, history: { dispatch: hDispatch }, global: { state: gState } } = useContext(context);\n\n    const historyHook = useHistory();\n    const mindmapHook = useMindmap();\n    const zoomHook = useZoom();\n    const moveHook = useMove()\n    const { clearNodeStatus } = mindmapHook;\n    const [FLAG, setFLAG] = useState(0)\n\n    const mindmap_json = useMemo(() => JSON.stringify(root_node), [root_node]); // 如果 root_node 没有 JSON.stringify，使用按键操作时有时会连续两次触发 useEffect，目前没查出来为什么。利用 useMemo 避免重复触发\n\n    const handleResize = () => {\n        setFLAG(Date.now())\n    }\n\n    useEffect(() => {\n        const handleKeydown = getKeydownEvent(nodeStatus, mindmapHook, historyHook);\n        window.addEventListener('keydown', handleKeydown);\n        return () => {\n            window.removeEventListener('keydown', handleKeydown);\n        }\n    }, [nodeStatus]);\n\n    useEffect(() => {\n        window.addEventListener('click', clearNodeStatus);\n        return () => {\n            window.removeEventListener('click', clearNodeStatus);\n        }\n    }, []);\n\n    useEffect(() => {\n        window.addEventListener('resize', handleResize);\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        }\n    }, [])\n\n    useEffect(() => {\n        const normalizeXY = container_ref.current.clientWidth / container_ref.current.clientHeight\n        const handleMouseWheel = getMouseWheelEvent(zoomHook, gState.zoom)\n        const handleMapMove = getMouseWheelEvent(moveHook, gState.zoom, normalizeXY)\n        document.querySelector(`#${refer.MINDMAP_MAIN}`).addEventListener('wheel', handleMouseWheel);\n        document.querySelector(`#${refer.MINDMAP_MAIN}`).addEventListener('mousemove', debounce(handleMapMove, 4));\n        document.querySelector(`#${refer.MINDMAP_MAIN}`).addEventListener('mousedown', handleMapMove)\n        return () => {\n            document.querySelector(`#${refer.MINDMAP_MAIN}`).removeEventListener('wheel', handleMouseWheel);\n            document.querySelector(`#${refer.MINDMAP_MAIN}`).addEventListener('mousemove', debounce(handleMapMove, 4));\n            document.querySelector(`#${refer.MINDMAP_MAIN}`).addEventListener('mousedown', handleMapMove);\n        }\n    }, [FLAG]);\n\n    useEffect(() => {\n        localStorage.setItem('mindmap', mindmap_json);\n        hDispatch(setHistory(mindmap_json, nodeStatus.cur_select || nodeStatus.cur_edit));\n    }, [mindmap_json]);\n\n    return (\n        <div\n            className={wrapper}\n            ref={self}\n            style={{ zoom: gState.zoom, left: gState.x + 'vw', top: gState.y + 'vh' }}\n            id={refer.MINDMAP_ID}\n            draggable={false}>\n            <RootNode key={root_node.id} layer={0} node={root_node} node_refs={node_refs} />\n            <DragCanvas parent_ref={self} container_ref={container_ref} mindmap={root_node} />\n            <LineCanvas parent_ref={self} mindmap={root_node} node_refs={node_refs} />\n        </div>\n    );\n};\n\nexport default Mindmap;\n\n// CSS\nconst wrapper = css`\nposition: relative;\nwidth: fit-content;\npadding: 30vh 30vw;\n`;"]},"metadata":{},"sourceType":"module"}